<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\shift\base;

use Yii;

/**
 * This is the base-model class for table "ohrm_rotationemployee".
 *
 * @property integer $id
 * @property string $rotationDate
 * @property integer $work_station
 * @property string $emp_firstname
 * @property integer $emp_number
 * @property integer $work_time
 * @property integer $count_work_time
 * @property integer $is_leader
 * @property integer $title_id
 * @property integer $emp_gender
 * @property integer $record_id
 * @property string $emp_birthday
 * @property integer $is_rotation
 * @property integer $mutual_exclusion
 * @property string $aliasModel
 */
abstract class RotationEmployee extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'ohrm_rotationemployee';
    }

    /**
     * @return \yii\db\Connection the database connection used by this AR class.
     */
    public static function getDb()
    {
        return Yii::$app->get('orangehrm');
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['rotationDate', 'emp_birthday'], 'safe'],
            [['work_station', 'emp_number', 'work_time', 'count_work_time', 'is_leader', 'title_id', 'emp_gender', 'record_id', 'is_rotation', 'mutual_exclusion'], 'integer'],
            [['emp_firstname'], 'string', 'max' => 50]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'rotationDate' => 'Rotation Date',
            'work_station' => 'Work Station',
            'emp_firstname' => 'Emp Firstname',
            'emp_number' => 'Emp Number',
            'work_time' => 'Work Time',
            'count_work_time' => 'Count Work Time',
            'is_leader' => 'Is Leader',
            'title_id' => 'Title ID',
            'emp_gender' => 'Emp Gender',
            'record_id' => 'Record ID',
            'emp_birthday' => 'Emp Birthday',
            'is_rotation' => 'Is Rotation',
            'mutual_exclusion' => 'Mutual Exclusion',
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
            'id' => '种子',
            'rotationDate' => '年月日 2019-2-3',
            'work_station' => '组id',
            'emp_firstname' => '姓名',
            'emp_number' => '用户id',
            'work_time' => '组内已待多少月',
            'count_work_time' => '组内共多少月',
            'is_leader' => '组长/副组长字段',
            'title_id' => '职称等级',
            'emp_gender' => '性别',
            'record_id' => '学历',
            'emp_birthday' => '出生日期',
            'is_rotation' => '是否参与轮转',
            'mutual_exclusion' => '是否是夫妻,互斥原则',
        ]);
    }




}
