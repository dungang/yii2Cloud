<?php

namespace common\models\shift;

use Yii;
use \common\models\shift\base\ShiftResult as BaseShiftResult;
use yii\helpers\ArrayHelper;
use common\models\shift\Schedule;
use common\models\shift\ShiftDate;
use common\models\shift\ShiftResultConfirm;
use common\models\shift\ShiftType;
use common\models\shift\ShiftOrderBy;
use common\models\shift\EmpSkill;
use common\models\shift\ShiftTypeDetail;
use common\models\employee\Employee;
use common\models\leave\LeaveEntitlement;
use common\models\attendance\AttendanceRecord;

/**
 * This is the model class for table "ohrm_work_shift_result".
 */
class ShiftResult extends BaseShiftResult
{

    public function behaviors()
    {
        return ArrayHelper::merge(
            parent::behaviors(),
            [
                # custom behaviors
            ]
        );
    }

    public function rules()
    {
        return ArrayHelper::merge(
            parent::rules(),
            [
                # custom validation rules
            ]
        );
    }

    public function getShiftResult($schedule_id)
    {
        
        $data = self::find()->where('schedule_id = :sid', [':sid' => $schedule_id])->asArray()->all();
        return $data;
    }

    
    public function addShiftResult($data){
        if ($this->load($data) && $this->save()){
            return true;
        }else {
             return false;
        }
    }


    public function delResult($schedule_id)
    {
        
        $data = self::deleteAll('schedule_id = :sid', [':sid' => $schedule_id]);
        return $data;
    }


    /**
     * @author 吴斌  2018/4/3 修改 
     * 获取员工班次信息
     * @return array $date_format   规范化数组 
     */
    public function getResultByEmpAndDate($emp,$shift_date,$schedule_id) {


        $query = self::find()
        ->where(['emp_number'=>$emp])
        ->andWhere(['shift_date'=>$shift_date])
        ->andWhere(['schedule_id'=>$schedule_id])
        ->one();
        return $query;
    }

    /**
     * @author 吴斌  2018/8/3 修改 
     * 获取某天上某个班次的人员列表
     * @param array $schedule_id 计划id 
     * @param int $shift_type_id 班次类型id
     * @param int $shift_date 日期信息
     * @return array  规范化数组 
     */
    public function getResutByIdAndDateAndType($schedule_id,$shift_date,$shift_type_id) {
        $query = self::find()
        ->where(['schedule_id'=>$schedule_id])
        ->andWhere(['shift_date'=>$shift_date])
        ->andWhere(['shift_type_id'=>$shift_type_id])
        ->asArray()
        ->all();
        return $query;
    }




     

    /**
     * @author 吴斌  2018/7/19 修改 
     * 格式化拼接排班数据
     * @param array $schedule_id 计划id 
     * @param int $workStation 组id
     * @param int $data 日期信息
     * @return array | 日期
     */

    public function formatData($schedule_id,$workStation,$data,$if_confrim=null,$copy_type=null,$schedule){


        $confirmmodel = new ShiftResultConfirm;
        $resultmmodel = new ShiftResult;
        $typemode=new ShiftType;
        $orderbymode=new ShiftOrderBy;
        $empskillmodel=new EmpSkill;

        $detailmodel=new ShiftTypeDetail;

        $employee=new Employee;

        $leaveenmodel=new LeaveEntitlement;

        $emp_new_all=array();

        //拼接数据
        if($if_confrim==1){
            $assignment_list=$this->getShiftResult($schedule_id);
        }else{
            $assignment_list=$confirmmodel->getRosterResultConfirm($schedule_id);
        }

        //获取班次类型信息
        $shiftTypes=$typemode->getShifType($workStation);
        $shiftTypes = array_column($shiftTypes, NULL, 'id');
        
        //获取参与攀比
        $emp_new_all=$orderbymode->getShiftOrderByAndEmp($schedule_id);

        if(count($emp_new_all)==0){
            $emp_new_all=$employee->getEmpByWorkStation($workStation);
        }

        $emp_new=array_column($emp_new_all, 'emp_number');
        $emp_new_all=array_column($emp_new_all,NULL, 'emp_number');
        $date_list=$data['dateList'];
        $date_list=array_column($date_list,'date');

        $shift_on_result=array();
        $new_rest['one']=array();
        $new_rest['half']=array();
        $new_leave['holday']=array();
        $new_leave['halfleave']=array();
        $night_emp=array();
        $night_data=array();
        $new_data1=array();
        $new_data2=array();
        $should_rest=array();
        $lastNithe=array();
        $tmpbe=array();
        $employeeList=$emp_new;

        $night_id='';

        //获取夜班id
        foreach ($shiftTypes as $key_n3 => $value_n3) {
           if($value_n3['is_night_shift']==1){
                $night_id=$value_n3['id'];
           }
        }

        // $nighEmp=$confirmmodel->getNightInfo($schedule_id,$night_id);

        // //查询有谁在上夜班
        // var_dump($night_id);exit;
        foreach ($assignment_list as $ks1 => $va1) {

            if($va1['shift_type_id']>0){
                $shift_on_result[$ks1]=$va1;
            }
            if($va1['leave_type']==1){
                $new_leave['holday'][$ks1]=$va1;
            }

            if($va1['leave_type']==2){
                $new_leave['halfleave'][$ks1]=$va1;
            }

            if($va1['rest_type']==1){
                $new_rest['one'][$ks1]=$va1;
            }

            if($va1['rest_type']==2){
                $new_rest['half'][$ks1]=$va1;
            }
            
            if($va1['shift_type_id']==$night_id){
                 $night_emp[$va1['emp_number']][$ks1]=$va1;
            }
            
        }


        //查询上周最后一天上夜班的员工信息
        $datebefore=  date("Y-m-d",strtotime("-1 day",strtotime($schedule->shift_date)));
        
        $lastNithe=$this->getShiftByDateAndType($datebefore,$night_id);

        foreach ($lastNithe as $key_b => $value_b) {
            $tmpbe[$value_b['emp_number']][$key_b]=$value_b;
        }

        

       //每个员工夜班个数
        foreach ($night_emp as $k_n3 => $v_n3) {

           $night_data[$k_n3]=count($v_n3);
        }

        foreach ($new_rest['one'] as $k_n1 => $v_n1) {
           $new_data1[$v_n1['emp_number']][$k_n1]=$v_n1;
        }


        foreach ($new_rest['half'] as $k_n7 => $v_n7) {
           $new_data2[$v_n7['emp_number']][$k_n7]=$v_n7;
        }
         // var_dump( $new_data2);exit;

        $sholud=2;
        if($copy_type=='two'){
            $sholud=4;
        }

        $res=array();
        $new_data3=array();
        $res=array_keys($new_data1);

        $new_shift=array_diff($emp_new, $res);


        foreach ($new_shift as $key_m => $value_m) {
            $new_data3[$value_m]=array();
        }

        $new_data1=$new_data1+$new_data3;

        //现有休息天数
        foreach ($new_data1 as $k_n2 => $v_n2) {
           $half_count=0;
           $half_count=isset($new_data2[$k_n2])?count($new_data2[$k_n2])/2:0;
           $new_da=count($v_n2)+$half_count;

           if(isset($night_data[$k_n2])){

             $if_enough=($night_data[$k_n2]+$sholud)-$new_da;

           }else{
            
             $if_enough=$sholud-$new_da;
           }
           //如果$should_rest>0,每天公休不足两天
           $should_rest[$k_n2]=$if_enough;
      
        }

        //判断夜班后是否是夜修
        $night_emp_new=array();
        $arr_keys=array();
        foreach ($tmpbe as $ke1 => $va1) {
            $arr_keys=array_keys($night_emp);
            if(in_array($ke1, $arr_keys)){
                $night_emp_new[$ke1]=array_merge($va1,$night_emp[$ke1]);
            }else{
                // $night_emp_new=$night_emp;
                $night_emp_new[$ke1]= $va1;
            }
        }
 
        $new_rest_date=array();
     
        foreach ($night_emp_new as $k_n4 => $v_n4) {
            foreach ($v_n4 as $k_n5 => $v_n5) {
               $new_rest_date[$k_n4][]=  date("Y-m-d",strtotime("+1 day",strtotime($v_n5['shift_date'])));
            }
        }
        $nitght_after=array();
        //获取员工夜修后一天的班次
        foreach ($assignment_list as  $k_n6 => $v_n6) {
            foreach ($new_rest_date as $k_n7 => $v_n7) {
                foreach ($v_n7 as $k_n8 => $v_n8) {
                    if($v_n6['shift_date']==$v_n8&&$v_n6['emp_number']==$k_n7){

                        if($v_n6['shift_type_id']>0){
                            $nitght_after[$k_n7]='夜班后没有夜休';
                        }
                        
                    }
                }
            }
            
        }
        $shift_on_emp=array_unique(array_column($shift_on_result, 'emp_number'));

        foreach ($assignment_list as $k => $assignment) {
            $employee=$assignment['emp_number'];
            $employee_array[$employee][]=$assignment;
        }

        $emarray=array();

        $empskilldata=array();
        $skempskill=array();

        //获取员工技能
        $empskilldata=$empskillmodel->getEmpSkillListByStation($workStation);

        foreach ($empskilldata as $key_skill => $value_skill) {
            $sklemp=$value_skill['emp_number'];
            $skempskill[$sklemp][$key_skill]=$value_skill['skill_id'];
        }

 
        foreach ($employee_array as $key => $employee) {
            
            $i=0;
            $leavid='';
            $emarray[$key]['empnum']=$key;
            //获取个人剩余假期数
            $emarray[$key]['leavecount']=$leaveenmodel->getEntitlementSurplusDay($key,null,null,null,false);
            $emarray[$key]['name']=$emp_new_all[$key]['emp_firstname'];
            $emarray[$key]['restcount']=isset($should_rest[$key])?$should_rest[$key]:0;
            $emarray[$key]['nighterror']=isset($nitght_after[$key])?$nitght_after[$key]:'';
            $emarray[$key]['index']=isset($emp_new_all[$key]['shift_index'])?isset($emp_new_all[$key]['shift_index']):$i;

            foreach ($date_list as $ked => $date) {
                if(empty($date)){
                    $emarray[$key][$ked]='';
                }else{
                    foreach ($employee as $ks => $emday) {
                        $type_name='';
                        if(isset($emday['shift_date'])&&$date==$emday['shift_date']){

                            $column_name=$ked;
                            $type_id=(int)$emday['shift_type_id'];

                            $type_id=$emday['shift_type_id'];
                            $leave_type=$emday['leave_type'];
                            $rest_type=$emday['rest_type'];
                            $orange_type=$emday['shift_type_id_backup'];

                            //判断是不是假期
                            if($type_id=='-100'){//空白，没有安排休息/班/假
                                $emarray[$key][$column_name]['label']='';
                                $emarray[$key][$column_name]['result_id']=$emday['id'];
                                $emarray[$key][$column_name]['type']=1;
                                $emarray[$key][$column_name]['type_id']='0';
                                $emarray[$key][$column_name]['leave_id']='';
                            }

                            //判断是不是假期
                            if($leave_type>0){
                                $if_have_leave=$confirmmodel->getLeaveOfEmpByEmpAndDate($key,$date);
                                if($leave_type==1&&$type_id==0){//全天假
                                    $leavefortype=2; 
                                    $type_name=$if_have_leave['name'];
                                   
                                }else if($leave_type==2&&$type_id>0){//半天班/半天假
                                    $type_name=isset($shiftTypes[$type_id]['name'])?$shiftTypes[$type_id]['name']:'';
                                    if($if_have_leave){
                                        if($if_have_leave['duration_type']==1){
                                            $leaveName=$if_have_leave['name'].'(上午)';
                                        }else if($if_have_leave['duration_type']==2){
                                             $leaveName=$if_have_leave['name'].'(下午)';
                                        }else{
                                             $leaveName=$if_have_leave['name'];
                                        }
                                        $type_name.='/'.$leaveName;
                                        $leavid=$if_have_leave['id'];
                                    }else{
                                        $type_name.='/假';
                                    }
                                }

                                $leavefortype=2; 
                                $emarray[$key][$column_name]['label']=$type_name;
                                $emarray[$key][$column_name]['type']=$leavefortype;
                                $emarray[$key][$column_name]['result_id']=$emday['id'];
                                $emarray[$key][$column_name]['type_id']='';
                                $emarray[$key][$column_name]['leave_id']=$if_have_leave['id'];
                            }
                            
                            //判断是不是休息
                            if($rest_type==1){//全天休息

                                if($type_id==0){
                                    $type_name='休息';
                                }else if($type_id==-1){
                                    $type_name='夜休';
                                }else if($type_id==-2){
                                    $type_name='补休';
                                }else if($type_id==-3){
                                    $type_name='公休';
                                }
                                $emarray[$key][$column_name]['label']=$type_name;
                                $emarray[$key][$column_name]['result_id']=$emday['id'];
                                $emarray[$key][$column_name]['type']=1;
                                $emarray[$key][$column_name]['type_id']='0';
                                $emarray[$key][$column_name]['leave_id']='';

                            }else if($rest_type==2&&$type_id>0){//半天班/半天休
                                $typeforshift=3;
                                $type_name=isset($shiftTypes[$type_id]['name'])?$shiftTypes[$type_id]['name']:'';
                                $emarray[$key][$column_name]['label']=$type_name.'/休';
                                $emarray[$key][$column_name]['result_id']=$emday['id'];
                                $emarray[$key][$column_name]['type']=$typeforshift;
                                $emarray[$key][$column_name]['type_id']=$type_id;
                                $emarray[$key][$column_name]['leave_id']=0;

                            }

                            if($leave_type==0 && $rest_type==0 && $type_id>0){//全天班
                                $typeforshift=3;
                                $type_name=isset($shiftTypes[$type_id]['name'])?$shiftTypes[$type_id]['name']:'';
                                $emarray[$key][$column_name]['label']=$type_name;
                                $emarray[$key][$column_name]['result_id']=$emday['id'];
                                $emarray[$key][$column_name]['type']=$typeforshift;
                                $emarray[$key][$column_name]['type_id']=$type_id;
                                $emarray[$key][$column_name]['leave_id']=0;

                            }

                        }
                    }
                }

                
            }
            ksort($emarray[$key]);

            $i++;
        }

        // var_dump($emarray);exit;

        $new_result=array();
        foreach ($emarray as $key1 => $value1) {

           $new_result[$key1]['name']=$value1['name'];
           $new_result[$key1]['index']=$value1['index'];
           $new_result[$key1]['num']=$value1['empnum'];
           $new_result[$key1]['leavecount']=$value1['leavecount'];

           $new_result[$key1]['isError']=false;

           $rest_two='';
           $rest_error='';


           if($if_confrim!=1){
                if($value1['restcount']>0){
                    $rest_error='公休不足两天';
                    $new_result[$key1]['isError']=true;
               }

               if($value1['restcount']<0){
                    $rest_error='公休大于两天';
                    $new_result[$key1]['isError']=true;
               }



               if($value1['nighterror']!=''){
                    $rest_two=$value1['nighterror'];
                    $new_result[$key1]['isError']=true;
                }

                if($new_result[$key1]['isError']==true){
                    $new_result[$key1]['errorInfo']= $rest_error."\n".$rest_two;
                }
            }

           $em=$value1['empnum'];
           unset($value1['name']);
           unset($value1['index']);
           unset($value1['empnum']);
           unset($value1['leavecount']);
           unset($value1['restcount']);
           unset($value1['nighterror']);


           $tm['type']='check';
           $tm['id']=$em;
           $tm['checked']=false;
           foreach ($value1 as $keya => $valuea) {
              if($valuea==''){
                $offset[]=$keya;
              }
           }
    
           //查找空值的索引
           $tm['type']='check';
           $tm['id']=$em;
           $tm['checked']=false;
           foreach ($offset as $keyd => $valued) {
              $value1[$valued]=$tm;
           }

           $new_result[$key1]['cells']=$value1;
        }
        return $new_result;
    }


    /**
     * @author 吴斌  2018/7/19 修改 
     * 验证技能
     * @param array $emp_skill 员工所拥有技能 
     * @param array $type_skill 班次所需技能
     * @return array | 日期
     */

    public function skillCheck($emp_skill,$type_skill){


        $if_skill_ok=array();
         $data=array();
         if(is_array($emp_skill)&&is_array($type_skill)){
            $if_skill_ok=array_intersect($emp_skill,$type_skill);

            if(count($if_skill_ok)>0){

                $data['status']=true;
                $data['message']='员工技能与该班次所需技能匹配';

            }else{
                $data['status']=false;
                $data['message']='员工技能与该班次所需技能不匹配';
            }
        }

    }

    /**
     * @author 吴斌  2018/7/19 修改 
     * 根据日期和ID查找排班信息
     * @param array $shift_date 员工所拥有技能 
     * @param array $shift_type_id 班次所需技能
     * @return array | 日期
     */

    public function getShiftByDateAndType($shift_date,$shift_type_id){
        $query=self::find()->where(['shift_date'=>$shift_date,'shift_type_id'=>$shift_type_id])->asArray()->all();
        return $query;
    }

    /**
     * @author 吴斌  2018/7/19 修改 
     * 获取某员工某天的班次
     * @param array $shift_date 员工所拥有技能 
     * @param array $emp_number 员工工资号
     * @return array | 日期
     */
    public function getShiftByDateAndEmp($emp_number,$shift_date){
        $query=self::find()->where(['shift_date'=>$shift_date,'emp_number'=>$emp_number])->asArray()->one();
        return $query;
    }


    /**
     * @author 吴斌  2018/7/19 修改 
     * 获取某计划某天所有的班次
     * @param array $shift_date 员工所拥有技能 
     * @param array $emp_number 员工工资号
     * @return array | 日期
     */

    public function getShiftTypeByDateAndScheduleId($scheduleId,$shift_date){
        $query=self::find()->where(['shift_date'=>$shift_date,'schedule_id'=>$scheduleId])->asArray()->all();
        return $query;
    }

     /**
     * @author 吴斌  2018/7/19 修改 
     * 获取班次
     * @param array $work_station 所属小组 
     * @param array $start_date 开始日期
     * @param array $end_date 结束日期 
     * @param array $type_id 技能id
     * @param array $emp_num 员工id
     * @return array | 日期
     */

    public function getResultList($work_station,$start_date,$end_date,$type_id,$emp_num){

        $query = (new \yii\db\Query())
        ->select(['a.emp_number','GROUP_CONCAT(a.shift_type_id) type'])
        ->from('orangehrm_mysql.ohrm_work_shift_result a')
        ->leftJoin('orangehrm_mysql.ohrm_work_schedule b','b.id = a.schedule_id')
        ->where(['b.location_id'=>$work_station])
        ->andWhere(['>','a.shift_type_id',0]);

        if(isset($start_date)&&!empty($start_date)){
            $query->andWhere(['>','a.shift_date',$start_date]);
        }
        if(isset($end_date)&&!empty($end_date)){
            $query->andWhere(['<','a.shift_date',$end_date]);
        }
        if(isset($emp_num)&&!empty($emp_num)){
            $query->andWhere(['a.emp_number'=>$emp_num]);
        }
        if(isset($type_id)&&!empty($type_id)){
            $query->andWhere(['a.shift_type_id'=>$type_id]);
        }
        $data=$query->groupBy(['a.emp_number'])->all();
      
        return $data;

    }


     /**
     * @author 吴斌  2018/7/19 修改 
     * 搜索班次
     * @param array $emp_num 员工id
     * @param array $work_station_list 该部门所有小组的id
     * @return array | 班次统计
     */

    public function searchShifts($shift_date,$work_station_list){

        $query = (new \yii\db\Query())
            ->select(['a.*','b.location_id'])
            ->from('orangehrm_mysql.ohrm_work_shift_result a')
            ->leftJoin('orangehrm_mysql.ohrm_work_schedule b','b.id = a.schedule_id')
            ->where(['b.is_confirm'=>1])
            ->andWhere(['b.is_show'=>1])
            ->andWhere('a.shift_type_id > 0')
            ->andWhere(['a.shift_date'=>$shift_date])
            ->andWhere(['in','b.location_id',$work_station_list])
            ->all();

        return $query;
      
    }

    /**
     * @author 吴斌  2018/1/11 修改 
     * 删除重复脏数据
     * @param int $dateId 日期ID
     * @return object | 对象
     */
   
    public function delDirtyData($schedule_id){
        $detailmodel=new ShiftTypeDetail;
        //获取该计划中的临时表数据
        $shiftTemp=$detailmodel->getDetailByScheduleId($schedule_id);

        $id=array();

        foreach ($shiftTemp as $key => $value) {
           $type_id=$value['shift_type_id'];
           $date=$value['shift_date'];
           $tmp[$type_id][$date][$key]=$value;
        }


        $id=array();
        foreach ($tmp as $k => $v) {
            
 
            foreach ($v as $k2 => $v2) {

                $data=array_column($v2, 'emp_number','id');
          
                $unique_arr = array_unique ( $data );
                // 获取重复数据的数组
                $repeat_arr = array_diff_assoc ( $data, $unique_arr );

                $array_unique_data=array_unique($repeat_arr);
    
                foreach ($data as $key2 => $value2) {
                    if(in_array($value2, $array_unique_data)){
                        $id[]=$key2;
                    }
                }
          
            }
        }

        $delCount='';
        if(count($id)>0){
            $delCount=$detailmodel->deleteTypeDetail($id);
        }

        return $delCount;

    }

    /**
     * @author 吴斌  2018/1/11 修改 
     * 调班，分时间段调班
     * @param int $schedule_id 计划id
     * @param int $shift_date 日期ID
     * @param int $orange_emp 原始员工
     * @param int $confirm_emp 被调班人
     * @param int $orange_type 原始班次
     * @param int $confirm_type 新班次
     * @param int $time_mark 调班时间段 0全天，1第一个时间段，2，第二个时间段
     * @param int $orange_end_time 原始班次结束时间
     * @param int $confrim_start_time 新始班次开始时间
     * @param int $confrim_end_time 新始班次结束时间
     * @param int $typeOrange 原班次信息
     * @param int $typeConfrim 新班次信息
     * @return object | 对象
     */
    public function confirmShiftNoLeave($schedule_id,$shift_date,$orange_emp,$confirm_emp,$orange_type,$confirm_type,$time_mark=0,$work_station,$typeOrange=null,$typeConfrim=null){


        //删除脏数据
        $attendmodel=new AttendanceRecord;
        $detailmodel=new ShiftTypeDetail;
        $if_daka_orange=$attendmodel->getAttendanceRecordByWB($orange_emp,$shift_date);
        $if_daka_confrim=$attendmodel->getAttendanceRecordByWB($confirm_emp,$shift_date);


       
        if($if_daka_orange==-1 || $if_daka_confrim==-1){
            $result['status'] = false;
            $result['message'] = '已有打卡记录，不可调班';
            return $result;
        }

        if($if_daka_orange >0){//加入不是全天打开
            if($time_mark !=$if_daka_orange){
                $result['status'] = false;
                $result['message'] = '已有打卡记录，不可调班';
                return $result;
            }
        }

        if($if_daka_confrim>0){//加入不是全天打开
            if($time_mark != $if_daka_confrim){
                $result['status'] = false;
                $result['message'] = '已有打卡记录，不可调班';
                return $result;
            }
        }
        
        if (!is_numeric($orange_emp)||!is_numeric($confirm_emp)||!is_numeric($schedule_id)) {
            $result['status'] = false;
            $result['message'] = '无效的参数';
            return $result;
            
        }


        if(!strtotime($shift_date)){
            $result['status'] = false;
            $result['message'] = '不是正确的时间格式';
            return $result;
        }


        $shiftEmtity=$this->getResultByEmpAndDate($orange_emp,$shift_date,$schedule_id);
        $shiftEmtityTwo=$this->getResultByEmpAndDate($confirm_emp,$shift_date,$schedule_id);

        if(!$shiftEmtity){
            $result['status'] = false;
            $result['message'] = '原班次信息不存在';
            return $result;
        }

        if(!$shiftEmtityTwo ){
            $result['status'] = false;
            $result['message'] = '新班次信息不存在';
        }

        $result_orange_id=$shiftEmtity->id;
        $result_confrim_id=$shiftEmtityTwo->id;


       
        $orange_one_start_time=isset($typeOrange['start_ktime'])?$typeOrange['start_ktime']:'00:00';
        $orange_one_end_time=isset($typeOrange['end_time_afternoon'])?$typeOrange['end_time_afternoon']:'00:00';
        $orange_two_start_time=isset($typeOrange['start_time_afternoon'])?$typeOrange['start_time_afternoon']:'00:00';
        $orange_two_end_time=isset($typeOrange['end_time'])?$typeOrange['end_time']:'00:00';
 
        //原始班次第一个时间段
        $confrim_one_start_time=isset($typeConfrim['start_time'])?$typeConfrim['start_time']:'00:00';
        $confrim_one_end_time=isset($typeConfrim['end_time_afternoon'])?$typeConfrim['end_time_afternoon']:'00:00';
        $confrim_two_start_time=isset($typeConfrim['start_time_afternoon'])?$typeConfrim['start_time_afternoon']:'00:00';
        $confrim_two_end_time=isset($typeConfrim['end_time'])?$typeConfrim['end_time']:'00:00';

        //首先根据timemark判断是否在临时表中存在
        //如果不存在，则分别创建共四条数据
        //如果存在，则替换各自班次的empnumbergetReslutFromTempEntity1($shiftDate,$time_mark,$emp)
        //原始班信息在临时表中是否创建

        $is_orange_tmp=$detailmodel->getReslutFromTempEntity($schedule_id,$shift_date,$time_mark,$orange_emp);
        //被调班次在原始表中是否已经存在
        $is_confirm_tmp=$detailmodel->getReslutFromTempEntity($schedule_id,$shift_date,$time_mark,$confirm_emp);

        $changeStatus1=false;


        $transaction = Yii::$app->db->beginTransaction();

        try{
            if($time_mark==0){//整天调班，不往临时表插数据
                if(empty($shiftEmtity)){
                    throw new \Exception();
                }else{
                    if(isset($shiftEmtity)&&isset($shiftEmtityTwo)&&!empty($confirm_emp)&&!empty($orange_emp)){
                        $shiftEmtity->emp_number=$confirm_emp;
                        $shiftEmtityTwo->emp_number=$orange_emp;

                        if(!$shiftEmtity->save()|| !$shiftEmtityTwo->save()){
                            throw new \Exception();
                        }

                        $result['status'] = true;
                        $result['message'] = '调班成功';
                        return $result;

                    } 
                 }    
            }else if($time_mark==1){ //调第一个时间段



                if(isset($is_orange_tmp->id)){//如果已经存在，则更换员工号即可
                    if(is_numeric($confirm_type)){//连个人班次互换
                        $is_orange_tmp->shift_type_id=$confirm_type;
                        if(!$is_orange_tmp->save()){
                            throw new \Exception();
                        }
                        
                    }else{//如果第一个时间段跟公休换
                        $is_orange_tmp->emp_number=$confirm_emp;
                        if(!$is_orange_tmp->save()){
                            throw new \Exception();
                        }else{
                            $changeStatus1=true;
                     
                        }
                    }
                    
                }else{
                  
                    if(is_numeric($confirm_type)){
                        $ora_type_one=new ShiftTypeDetail;
                        $data1['ShiftTypeDetail']['shift_date']=$shift_date ;
                        $data1['ShiftTypeDetail']['start_time']=$confrim_one_start_time ;
                        $data1['ShiftTypeDetail']['end_time']=$confrim_one_end_time ;
                        $data1['ShiftTypeDetail']['emp_number']=$orange_emp ;
                        $data1['ShiftTypeDetail']['schedule_id']=$schedule_id ;
                        $data1['ShiftTypeDetail']['shift_result_id']=$result_orange_id ;
                        $data1['ShiftTypeDetail']['status']=0 ;
                        $data1['ShiftTypeDetail']['time_mark']=1 ;
                        $data1['ShiftTypeDetail']['shift_type_id']=$confirm_type ;
                        if(!$ora_type_one->addDetail($data1)){
                             throw new \Exception();
                        }
                    
                    }


                    $ora_type_two=new ShiftTypeDetail;
                    $data8['ShiftTypeDetail']['shift_date']=$shift_date ;
                    $data8['ShiftTypeDetail']['start_time']=$orange_two_start_time ;
                    $data8['ShiftTypeDetail']['end_time']=$orange_two_end_time ;
                    $data8['ShiftTypeDetail']['emp_number']=$orange_emp ;
                    $data8['ShiftTypeDetail']['schedule_id']=$schedule_id ;
                    $data8['ShiftTypeDetail']['shift_result_id']=$result_orange_id ;
                    $data8['ShiftTypeDetail']['status']=0 ;
                    $data8['ShiftTypeDetail']['time_mark']=2 ;
                    $data8['ShiftTypeDetail']['shift_type_id']=$orange_type ;
                    if(!$ora_type_two->addDetail($data8)){
                         throw new \Exception();
                    }
                }



                if(isset($is_confirm_tmp->id)){//如果已经存在，则更换员工号即可

                    $is_confirm_tmp->shift_type_id=$orange_type;
                    if(!$is_confirm_tmp->save()){
                        throw new \Exception();
                    }
                }else{
                    if($changeStatus1==false){
                        $confirm_type_one=new ShiftTypeDetail;
                        $data2['ShiftTypeDetail']['shift_date']=$shift_date ;
                        $data2['ShiftTypeDetail']['start_time']=$orange_one_start_time ;
                        $data2['ShiftTypeDetail']['end_time']=$orange_one_end_time ;
                        $data2['ShiftTypeDetail']['emp_number']=$confirm_emp ;
                        $data2['ShiftTypeDetail']['schedule_id']=$schedule_id ;
                        $data2['ShiftTypeDetail']['shift_result_id']=$result_confrim_id ;
                        $data2['ShiftTypeDetail']['status']=0 ;
                        $data2['ShiftTypeDetail']['time_mark']=1 ;
                        $data2['ShiftTypeDetail']['shift_type_id']=$orange_type ;

                        if(!$confirm_type_one->addDetail($data2)){
                             throw new \Exception();
                        }

                    }
                    
                    if(is_numeric($confirm_type)){

                        $confirm_type_two=new ShiftTypeDetail;
                        $data3['ShiftTypeDetail']['shift_date']=$shift_date ;
                        $data3['ShiftTypeDetail']['start_time']=$confrim_two_start_time ;
                        $data3['ShiftTypeDetail']['end_time']=$confrim_two_end_time ;
                        $data3['ShiftTypeDetail']['emp_number']=$confirm_emp ;
                        $data3['ShiftTypeDetail']['schedule_id']=$schedule_id ;
                        $data3['ShiftTypeDetail']['shift_result_id']=$result_confrim_id ;
                        $data3['ShiftTypeDetail']['status']=0 ;
                        $data3['ShiftTypeDetail']['time_mark']=2 ;
                        $data3['ShiftTypeDetail']['shift_type_id']=$confirm_type;

                        if(!$confirm_type_two->addDetail($data3)){
                             throw new \Exception();
                        }
                    }
                }
                //更改排班结果表中班次所属人员
                $shiftEmtity->emp_number=$confirm_emp;
                $shiftEmtityTwo->emp_number=$orange_emp;

                if(!$shiftEmtity->save()||!$shiftEmtityTwo->save()){
                    throw new \Exception();
                }else{
                    $result['status'] = true;
                    $result['message'] = '调班成功';
                    $this->delDirtyData($schedule_id);
                    return $result;
                }
               

            }else if($time_mark==2){//调第二个时间段
                if(isset($is_orange_tmp->id)){//如果已经存在，则更换员工号即可
                    if(is_numeric($confirm_type)){//连个人班次互换
                        $is_orange_tmp->shift_type_id=$confirm_type;
                        if(!$is_orange_tmp->save()){
                            throw new \Exception();
                        }
                       
                    }else{//如果第一个时间段跟公休换
                        $is_orange_tmp->emp_number=$confirm_emp;
                        if(!$is_orange_tmp->save()){
                            throw new \Exception();
                        }else{
                            $changeStatus1=true;
                            $result['status'] = true;
                            $result['message'] = '调班成功';
                            return $result;
                        }
                    }

                }else{

                    $ora_type_one=new ShiftTypeDetail;
                    $data4['ShiftTypeDetail']['shift_date']=$shift_date ;
                    $data4['ShiftTypeDetail']['start_time']=$orange_one_start_time ;
                    $data4['ShiftTypeDetail']['end_time']=$orange_one_end_time ;
                    $data4['ShiftTypeDetail']['emp_number']=$orange_emp ;
                    $data4['ShiftTypeDetail']['schedule_id']=$schedule_id ;
                    $data4['ShiftTypeDetail']['shift_result_id']=$result_orange_id ;
                    $data4['ShiftTypeDetail']['status']=0 ;
                    $data4['ShiftTypeDetail']['time_mark']=1 ;
                    $data4['ShiftTypeDetail']['shift_type_id']=$orange_type ;

                    if(!$ora_type_one->addDetail($data4)){
                         throw new \Exception();
                    }

                    if(is_numeric($confirm_type)){
                        $ora_type_two=new ShiftTypeDetail;
                        $data5['ShiftTypeDetail']['shift_date']=$shift_date ;
                        $data5['ShiftTypeDetail']['start_time']=$confrim_two_start_time ;
                        $data5['ShiftTypeDetail']['end_time']=$confrim_one_end_time ;
                        $data5['ShiftTypeDetail']['emp_number']=$orange_emp ;
                        $data5['ShiftTypeDetail']['schedule_id']=$schedule_id ;
                        $data5['ShiftTypeDetail']['shift_result_id']=$result_orange_id ;
                        $data5['ShiftTypeDetail']['status']=0 ;
                        $data5['ShiftTypeDetail']['time_mark']=2 ;
                        $data5['ShiftTypeDetail']['shift_type_id']=$confirm_type ;

                        if(!$ora_type_two->addDetail($data5)){
                             throw new \Exception();
                        }
                    }
                }

                if(isset($is_confirm_tmp->id)){//如果已经存在，则更换员工号即可
                    $is_confirm_tmp->shift_type_id=$orange_type;
                    if(!$is_confirm_tmp->save()){
                        throw new \Exception();
                    }
                }else{
                    if(is_numeric($confirm_type)){
                        $confirm_type_one=new ShiftTypeDetail;
                        $data6['ShiftTypeDetail']['shift_date']=$shift_date ;
                        $data6['ShiftTypeDetail']['start_time']=$confrim_one_start_time ;
                        $data6['ShiftTypeDetail']['end_time']=$confrim_one_end_time ;
                        $data6['ShiftTypeDetail']['emp_number']=$confirm_emp ;
                        $data6['ShiftTypeDetail']['schedule_id']=$schedule_id ;
                        $data6['ShiftTypeDetail']['shift_result_id']=$result_confrim_id ;
                        $data6['ShiftTypeDetail']['status']=0 ;
                        $data6['ShiftTypeDetail']['time_mark']=1 ;
                        $data6['ShiftTypeDetail']['shift_type_id']=$confirm_type ;
                        if(!$confirm_type_one->addDetail($data6)){
                             throw new \Exception();
                        }


                    }

                    if($changeStatus1==false){//如果在上面操作没有将原始班次人员表更，则新建临时信息
                        $confirm_type_two=new ShiftTypeDetail;
                        $data7['ShiftTypeDetail']['shift_date']=$shift_date ;
                        $data7['ShiftTypeDetail']['start_time']=$orange_two_start_time ;
                        $data7['ShiftTypeDetail']['end_time']=$orange_two_end_time ;
                        $data7['ShiftTypeDetail']['emp_number']=$confirm_emp ;
                        $data7['ShiftTypeDetail']['schedule_id']=$schedule_id ;
                        $data7['ShiftTypeDetail']['shift_result_id']=$result_confrim_id ;
                        $data7['ShiftTypeDetail']['status']=0 ;
                        $data7['ShiftTypeDetail']['time_mark']=2 ;
                        $data7['ShiftTypeDetail']['shift_type_id']=$orange_type ;
                        if(!$confirm_type_two->addDetail($data7)){
                             throw new \Exception();
                        }

                    }

                }

                $this->delDirtyData($schedule_id);
                $transaction->commit();
                $result['status'] = true;
                $result['message'] = '调班成功';
                return $result;
            }
        }catch(\Exception $e) {
            $transaction->rollback();
            $result['status'] = false;
            $result['message'] = '调班失败';
            return $result;
        }

        

    }


}
