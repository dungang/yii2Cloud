<?php
namespace frontend\controllers\v1;
use common\models\shift\RotationRuleWarehouse;
use Yii;
use yii\web\Response;
use yii\web\Controller;
//use yii\helpers\ArrayHelper;
class RotationRuleWarehouseController extends \common\rest\Controller
{
    /**
     * @var string
     */
    public $modelClass = 'common\models\shift\RotationRuleWarehouse';

    /**
     *
     * @var array
     */
    public $serializer = [
        'class' => 'common\rest\Serializer',    // 返回格式数据化字段
        'collectionEnvelope' => 'result',       // 制定数据字段名称
        'message' => 'OK',                      // 文本提示
        'errno'   => 0,
        'status'  =>'',
    ];
    /**
     * @param  [action] yii\rest\IndexAction
     * @return [type]
     */
    public function beforeAction($action)
    {
        $format = \Yii::$app->getRequest()->getQueryParam('format', 'json');

        if($format == 'xml'){
            \Yii::$app->response->format = \yii\web\Response::FORMAT_XML;
        }else{
            \Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;
        }

        return $action;
    }

    /**
     * @param  [type]
     * @param  [type]
     * @return [type]
     */
    public function afterAction($action, $result){
        $result = parent::afterAction($action, $result);

        return $result;
    }

    public function behaviors()
    {
        $behaviors = parent::behaviors();
        $behaviors['contentNegotiator']['formats']['text/html'] = Response::FORMAT_HTML;
        return $behaviors;
    }

    public function actions()
    {
        $actions = parent::actions();
        unset($actions['index']);
        return $actions;
    }
    /**
     * @SWG\Post(path="/rotation-rule-warehouse/create",
     *     tags={"云平台-rotationRuleWarehouse-轮转规则库"},
     *     summary="创建规则",
     *     description="新建规则",
     *     produces={"application/json"},
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "Token",
     *        description = "Token",
     *        required = true,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "ruleType",
     *        description = "规则类型：空默认out调出规则in调入规则",
     *        required = true,
     *        type = "integer"
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "ruleTypeName",
     *        description = "规则类型名称",
     *        required = true,
     *        type = "string",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "ruleTitle",
     *        description = "规则名称",
     *        required = true,
     *        type = "string",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "select1",
     *        description = "存放下拉框数据 格式json单",
     *        required = false,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "select2",
     *        description = "存放下拉框数据 格式json多",
     *        required = false,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "input1",
     *        description = "存放输入框数据 格式json",
     *        required = false,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "input2",
     *        description = "存放输入框数据 格式json",
     *        required = false,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "isMultiple",
     *        description = "是否可多条 0默认1可多条",
     *        required = false,
     *        type = "integer",
     *        default = 0,
     *        enum = {0,1}
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "status",
     *        description = "状态：0默认1开放2关闭",
     *        required = false,
     *        type = "integer",
     *        default = 0,
     *        enum = {0,1,2}
     *     ),
     *     @SWG\Response(
     *         response = 200,
     *         description = "返回班次类型列表"
     *     ),
     *     @SWG\Response(
     *         response = 422,
     *         description = "Data Validation Failed 创建失败",
     *     )
     * )
     *
     **/
    public function actionCreate()
    {

        $this->serializer['errno']   = 0;
        $this->serializer['status']   = true;
        $this->serializer['message'] = "获取成功";
        /**先把规则库中的规则类型名称和数据填充上发
        *insert into rotationRuleWarehouse,rotationRuleWarehouseId,ruleTypeName...value(,,,);
         */
    }
    /**
     * @SWG\Post(path="/rotation-rule-warehouse/list",
     *     tags={"云平台-rotationRuleWarehouse-轮转规则库"},
     *     summary="获取规则列表",
     *     description="获取规则列表",
     *     produces={"application/json"},
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "Token",
     *        description = "Token",
     *        required = true,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "groupId",
     *        description = "组id",
     *        required = true,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "ruleType",
     *        description = "规则类型：空默认out调出规则in调入规则",
     *        required = true,
     *        type = "integer",
     *     ),
     *     @SWG\Response(
     *         response = 200,
     *         description = "返回技能类型列表"
     *     ),
     * )
     *
     **/
    // 轮转规则库（rotationRuleWarehouse）
    public function actionList()
    {
        $a = '[{
        "ruleWarehouseId": "1",
		"ruleTitle": "职称等级满多长时间轮转",
		"status": false,
		"isMultiple": "yes",
		"formData": [
            [{
            "type": "singleselect",
					"id": "select1",
					"value": "",
					"selected": "chuji",
					"placeholder": "",
					"options": [{
                    "name": "请选择",
							"value": ""
						},
						{
                            "name": "初级",
							"value": "chuji"
						},
						{
                            "name": "高级",
							"value": "gaoji"
						}
					]
				},
				{
                    "type": "input",
					"id": "input1",
					"value": "",
					"selected": [],
					"placeholder": "多少月",
					"options": [

                ]
				}
			],
			[{
            "type": "singleselect",
					"id": "select1",
					"value": "",
					"selected": "chuji",
					"placeholder": "",
					"options": [{
                            "name": "请选择",
							"value": ""
						},
						{
                            "name": "初级",
							"value": "chuji"
						},
						{
                            "name": "高级",
							"value": "gaoji"
						}
					]
				},
				{
                    "type": "input",
					"id": "input1",
					"value": "",
					"selected": [],
					"placeholder": "多少月",
					"options": [

                ]
				}
			]
		]
	},
	{
        "ruleWarehouseId": "2",
		"ruleTitle": "学历范围",
		"status": false,
		"isMultiple": "no",
		"formData": [{
        "type": "multiselect",
			"id": "select1",
			"value": "",
			"selected": [
            "zhongzhuan",
            "daxue"
        ],
			"placeholder": "",
			"options": [{
            "name": "请选择",
					"value": ""
				},
				{
                    "name": "中专",
					"value": "zhongzhuan"
				},
				{
                    "name": "大学",
					"value": "daxue"
				}
			]
		}]
	},
	{
	    "ruleWarehouseId":"4",
	    "ruleTitle": "组长/副组长不参与轮转",
	    "status": true,
	    "isMultiple": "no"
	},
	{
	    "ruleWarehouseId":"5",
	    "ruleTitle": "在组内满几年轮转",
	    "status": false,
	    "isMultiple": "no",
	    "formData":[{
	        "type": "singleselect",
            "id": "select1",
            "value": "",
            "selected": "yinian",
            "placeholder": "",
            "options":[{
                    "name":"请选择单选",
                    "value":""},
                {
                    "name":"1年",
                    "value":"yinian"
                },
                {
                    "name":"2年",
                    "value":"ernian"
                }
            ]
	    }]
	},
	{
	    "ruleWarehouseId":"6",
	    "ruleTitle": "仅男生/女生",
	    "status": false,
	    "isMultiple": "no",
	    "formData":[{
	        "type": "singleselect",
            "id": "select1",
            "value": "",
            "selected": "w",
            "placeholder": "",
            "options":[{
                    "name":"请选择单选",
                    "value":""},
                {
                    "name":"男生",
                    "value":"m"
                },
                {
                    "name":"女生",
                    "value":"w"
                }
            ]
	    }]
	},
	{
        "ruleWarehouseId":"7",
		"ruleTitle": "年龄范围",
		"status": false,
		"isMultiple": "no",
		"formData": [{
			"type": "input",
			"id": "input1",
			"value": "",
			"selected": [],
			"placeholder": "最小年龄",
			"options": [

				]
					},
			{
				"type": "input",
				"id": "input2",
				"value": "",
				"valuequeue": ["input"],
				"selected": [],
				"placeholder": "最大年龄",
				"options": [

			]
			}

		]
	}
]';

        $b = json_decode($a);
        $this->serializer['errno']   = 0;
        $this->serializer['status']   = true;
        $this->serializer['message'] = "获取成功";
        return $b;

         /**1,添加修改规则页 中取出轮转列表
         * select rotationName(轮转名称),rotationDateBegin(开始时间),rotationDateEnd formr otationList
         * 2,取出小组信息  给文军要小组接口
         * 3,取出调出 调入 规则行从rotationRuleWarehouse表
         * select ruleTypeName,ruleTitle....from rotationRuleWarehouse where rotationRuleWarehouseId='out';
         *
         *4,显示规则坑
         * select id,ruleTitle,select1(下拉值),input1(输入框值)where rotationList(轮转表id)and groupid(组id)
          * rotationRuleWarehouseId(规则类型 调入或调出)
         */
    }
    /**
     * @SWG\Post(path="/rotation-rule-warehouse/insert-rule",
     *     tags={"云平台-rotationRuleWarehouse-轮转规则库"},
     *     summary="获取规则列表数据",
     *     description="获取规则列表数据",
     *     produces={"application/json"},
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "Token",
     *        description = "Token",
     *        required = true,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "info",
     *        description = "返回信息",
     *        required = true,
     *        type = "string",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "rotationId",
     *        description = "轮转表id",
     *        required = true,
     *        type = "string",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "groupId",
     *        description = "组id",
     *        required = true,
     *        type = "string",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "ruleType",
     *        description = "规则类型：空默认out调出规则in调入规则",
     *        required = true,
     *        type = "string",
     *     ),

     *     @SWG\Response(
     *         response = 200,
     *         description = "返回技能类型列表"
     *     ),
     * )
     *
     **/
    //从规则库页面获取数据 insert 轮转规则表（rotationRule）
    public function actionInsertRule()
    {
        $this->serializer['errno']   = 0;
        $this->serializer['status']   = true;
        $this->serializer['message'] = "获取成功";
       // insert into rotationRule (rotationId,groupId,ruleType,rotationRuleWarehouseId,select1) value(..);
    }
}