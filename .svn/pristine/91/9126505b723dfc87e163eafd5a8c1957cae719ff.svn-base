<?php
namespace frontend\controllers\v1;

use Yii;
use yii\web\Response;
use yii\helpers\Url;
use yii\web\Controller;
use yii\helpers\ArrayHelper;
use common\models\shift\Schedule;
use common\models\shift\ShiftDate;
use common\models\shift\ShiftResultConfirm;
use common\models\shift\ShiftType;
use common\models\shift\ShiftOrderBy;
use common\models\shift\TypeSkill;
use common\models\shift\ShiftResult;
use common\models\shift\ShiftResultOrange;
use common\models\leave\LeaveEntitlement;
use common\models\leave\LeaveType;
use common\models\employee\Employee;
use common\models\shift\EmpSkill;
use common\models\shift\ShiftModel;
use common\models\user\User;
use common\models\shift\ShiftTypeDetail;
use common\models\attendance\AttendanceRecord;
use common\models\shift\ShiftChangeApply;
use common\models\attendance\ApproverTab;


class WebChatShiftController extends \common\rest\Controller
{
    /**
     * @var string
     */
    public $modelClass = 'common\models\ShiftResult';

    /**
     * 
     * @var array
     */
    public $serializer = [
        'class' => 'common\rest\Serializer',    // 返回格式数据化字段
        'collectionEnvelope' => 'result',       // 制定数据字段名称
        'message' => 'OK',                      // 文本提示
        'errno'   => 0,
        'status'  =>''
    ];

    

    /**
     * @param  [action] yii\rest\IndexAction
     * @return [type] 
     */
    public function beforeAction($action)
    {
        $format = \Yii::$app->getRequest()->getQueryParam('format', 'json');

        if($format == 'xml'){
            \Yii::$app->response->format = \yii\web\Response::FORMAT_XML;
        }else{
            \Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;
        }

        return $action;
    }

    /**
     * @param  [type]
     * @param  [type]
     * @return [type]
     */
    public function afterAction($action, $result){
        $result = parent::afterAction($action, $result);

        return $result;
    }

    public function behaviors()
    {
        $behaviors = parent::behaviors();
        $behaviors['contentNegotiator']['formats']['text/html'] = Response::FORMAT_HTML;
        return $behaviors;
    }

    public function actions()
    {
        $actions = parent::actions();
        unset($actions['index']);
        return $actions;
    }

    /**
     * @SWG\Post(path="/web-chat-shift/shift-change",
     *     tags={"微信-shift-调班申请"},
     *     summary="获取调班人某天班次信息",
     *     description="获取调班人某天班次信息",
     *     produces={"application/json"},
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "Token",
     *        description = "Token 310aa76f13eb634e0894b43bd25f0bfefa196b4b",
     *        required = true,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "shiftDate",
     *        description = "开始时间",
     *        required = false,
     *        type = "integer",
     *     ),
     *     @SWG\Response(
     *         response = 200,
     *         description = "获取调班人某天班次信息"
     *     ),
     * )
     *
    **/
    public function actionShiftChange()
    {
        //获取员编号
        $empId=$this->empNumber;
        $post=Yii::$app->request->post();
        $shiftdate=$post['shiftDate'];

        if(!strtotime($shiftdate)){
            $this->serializer['errno']   = 0;
            $this->serializer['status']   = false;
            $this->serializer['message'] = "不是正确的时间格式";
            return [];
        }

        $shiftTypeDetail=array();
        $shiftResult=array();
        //查询排班临时表中是否有数据
        $typedetailmodel=new ShiftTypeDetail;
        $resultmodel=new ShiftResult;
        $shiftordermodel=new ShiftOrderBy;
        $typemode=new ShiftType;
        $shiftTypeDetail=$typedetailmodel->getShitReslutFromTemp($empId,$shiftdate);
        $shiftResult = $resultmodel->getShiftByDateAndEmp($empId,$shiftdate);
        $work_station=$this->workStation;
        $scheduleId=$shiftResult['schedule_id'];
        $is_default=0;
        if(null!=$shiftResult || null!=$shiftTypeDetail){
            $shiftypelist=$resultmodel->getShiftTypeByDateAndScheduleId($scheduleId,$shiftdate);
            foreach ($shiftypelist as $key => $value) {
                if($value['shift_type_id']!= $shiftResult['shift_type_id']){
                    $shiftTypeList[$key]=$value;
                }
            }

            $shifOnEmp=array_column($shiftypelist, 'emp_number');
            $shiftypelist=array_column($shiftTypeList, NULL, 'shift_type_id');
            $shiftType=$typemode->getShifType($work_station);
            $shiftType=array_column($shiftType, NULL, 'id');
            if(count($shiftTypeDetail)>0){
                foreach ($shiftTypeDetail as $key => $value) {
                    $start_time=date('H:i',strtotime($value['start_time']));
                    $end_time=date('H:i',strtotime($value['end_time']));
                    $type_id=$value['shift_type_id'];
                    $orange[$key]['id']=$type_id;
                    $orange[$key]['scheduleId']=$value['schedule_id'];
                    $orange[$key]['name']=$shiftType[$type_id]['name'];
                    $orange[$key]['is_show']='0';
                    $orange[$key]['is_default']=$value['time_mark'];
                    $orange[$key]['time'][0]['id']='0';
                    $orange[$key]['time'][0]['start_time']=$start_time;
                    $orange[$key]['time'][0]['end_time']=$end_time;
                    $orange[$key]['time'][0]['time_combine']='全部';
                    $orange[$key]['time'][1]['id']=$value['time_mark'];
                    $orange[$key]['time'][1]['start_time']=$start_time;
                    $orange[$key]['time'][1]['end_time']=$end_time;
                    $orange[$key]['time'][1]['time_combine']=$start_time.'-'.$end_time;
                    
                }
               
            }else{
                $type_id=$shiftResult['shift_type_id'];
                $is_work_half=$shiftType[$type_id]['is_work_half'];
                $start_time_one=date('H:i',strtotime($shiftType[$type_id]['start_time']));
                $end_time_one=date('H:i',strtotime($shiftType[$type_id]['end_time_afternoon']));
                $start_time_two=date('H:i',strtotime($shiftType[$type_id]['start_time_afternoon']));
                $end_time_two=date('H:i',strtotime($shiftType[$type_id]['end_time']));

                $orange[0]['id']=$type_id;
                $orange[0]['scheduleId']=$shiftResult['schedule_id'];
                $orange[0]['name']=$shiftType[$type_id]['name'];

                if(($start_time_one =='00:00' && $end_time_one =='00:00')||($start_time_two =='00:00' || $end_time_two=='00:00')){
                    $is_show='0';
                    $is_default=0;
                   
                }else{
                    $is_show='1';
                }

                if($is_work_half==1){
                    $is_show='1';
                }
                $orange[0]['is_show']=$is_show;
                $orange[0]['is_default']=$is_default;
                $orange[0]['time'][0]['id']='0';
                $orange[0]['time'][0]['start_time']=$shiftType[$type_id]['start_time'];
                $orange[0]['time'][0]['end_time']=$shiftType[$type_id]['end_time'];
                $orange[0]['time'][0]['time_combine']='全部';

                if($start_time_one!='00:00' || $end_time_one!='00:00'){
                    $orange[0]['time'][1]['id']='1';
                    $orange[0]['time'][1]['start_time']=$start_time_one;
                    $orange[0]['time'][1]['end_time']=$end_time_one;
                    $orange[0]['time'][1]['time_combine']=$start_time_one.'-'.$end_time_one;
                }
                
                if($start_time_two!='00:00' || $end_time_two!='00:00'){
                    $orange[0]['time'][2]['id']='2';
                    $orange[0]['time'][2]['start_time']=$start_time_two;
                    $orange[0]['time'][2]['end_time']=$shiftType[$type_id]['end_time'];
                    $orange[0]['time'][2]['time_combine']=$start_time_two.'-'.$end_time_two;
                }
                
            }

            $orange=array_values($orange);
            //原始班次第一个时间段
            $cur_date=array();
            $i=0;
            //获取当天其他班次
            foreach ($shiftypelist as $key => $shift) {
                $type_id=$shift['shift_type_id'];

                //如果不是休息
                if($type_id>0){
                    $shiftOne=$shiftType[$type_id];
                    $start_time_one='00:00';
                    $end_time_one='00:00';
                    $start_time_two='00:00';
                    $end_time_two='00:00';

                    $start_time_one=date('H:i',strtotime($shiftOne['start_time']));
                    $end_time_one=date('H:i',strtotime($shiftOne['end_time_afternoon']));
                    $start_time_two=date('H:i',strtotime($shiftOne['start_time_afternoon']));
                    $end_time_two=date('H:i',strtotime($shiftOne['end_time']));


                    if(($start_time_one =='00:00' && $end_time_one =='00:00')||($start_time_two =='00:00' || $end_time_two=='00:00')){
                        $is_show='0';
                       
                    }else{
                        $is_show='1';
                    }

                    $cur_date[$i]['type_id']=$shift['shift_type_id'];
                    $cur_date[$i]['type_name']=$shiftOne['name'];
                    $cur_date[$i]['is_show']=$is_show;
                    $cur_date[$i]['time'][0]['id']='0';
                    $cur_date[$i]['time'][0]['start_time']=$start_time_one;
                    $cur_date[$i]['time'][0]['end_time']=$end_time_two;
                    $cur_date[$i]['time'][0]['time_combine']='全部';

                    if($start_time_one!='00:00' || $end_time_one!='00:00'){

                        $cur_date[$i]['time'][1]['id']='1';
                        $cur_date[$i]['time'][1]['start_time']=$start_time_one;
                        $cur_date[$i]['time'][1]['end_time']=$end_time_one;
                        $cur_date[$i]['time'][1]['time_combine']=$start_time_one.'-'.$end_time_one;
                    }

                    if($start_time_two!='00:00' || $end_time_two!='00:00'){
                        $cur_date[$i]['time'][2]['id']='2';
                        $cur_date[$i]['time'][2]['start_time']=$start_time_two;
                        $cur_date[$i]['time'][2]['end_time']=$end_time_two;
                        $cur_date[$i]['time'][2]['time_combine']=$start_time_two.'-'.$end_time_two;
                    }
                }else{
                    $cur_date[$i]['type_id']='gongxiu';
                    $cur_date[$i]['type_name']='休假(不扣假)';
                    $cur_date[$i]['is_show']='0';
                    $cur_date[$i]['time'][0]['id']='0';
                    $cur_date[$i]['time'][0]['start_time']='';
                    $cur_date[$i]['time'][0]['end_time']='';
                    $cur_date[$i]['time'][0]['time_combine']='全部';
                }
                $i++;
            }

            $cur_date=array_values($cur_date);
            $result['orange'] = $orange;
            $result['type_list'] = $cur_date;
            $this->serializer['errno']   = 0;
            $this->serializer['status']   = true;
            $this->serializer['message'] = "获取成功";
            return $result;

        }else{
            $this->serializer['errno']   = 0;
            $this->serializer['status']   = false;
            $this->serializer['message'] = "期间没有排班信息";
            return [];
        }
        
    }


    /**
     * @SWG\Post(path="/web-chat-shift/change-emp",
     *     tags={"微信-shift-调班申请"},
     *     summary="获取被调班次的人员列表",
     *     description="获取被调班次的人员列表",
     *     produces={"application/json"},
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "Token",
     *        description = "Token 310aa76f13eb634e0894b43bd25f0bfefa196b4b",
     *        required = true,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "scheduleId",
     *        description = "班次计划id",
     *        required = false,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "ChangeshiftDate",
     *        description = "要调班的日期",
     *        required = false,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "newType",
     *        description = "被调的班次",
     *        required = false,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "timeMarkOne",
     *        description = "第一个时间段",
     *        required = false,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "timeMarkTwo",
     *        description = "第二个时间段",
     *        required = false,
     *        type = "integer",
     *     ),
     *     @SWG\Response(
     *         response = 200,
     *         description = "返回技能类型列表"
     *     ),
     * )
     *
    **/
    public function actionChangeEmp()
    {

        $post=Yii::$app->request->post();

        $schedule_id=$post['scheduleId'];
        $date=$post['ChangeshiftDate'];
        $type=$post['newType'];
        $timeMarkOne = $post['timeMarkOne'];
        $timeMarkTwo = $post['timeMarkTwo'];
        $empId=$this->empNumber;

        $resultmodel=new ShiftResult;
        $empmodel=new Employee;
        $shiftordermodel=new ShiftOrderBy;
        $typedetailmodel=new ShiftTypeDetail;
        $schedulemodel=new Schedule;

        if(!strtotime($date)){
          
            $this->serializer['errno']   = 0;
            $this->serializer['status']   = false;
            $this->serializer['message'] = "不是正确的时间格式";
            return [];
        }
        if(null==$timeMarkOne){
            $this->serializer['errno']   = 0;
            $this->serializer['status']   = false;
            $this->serializer['message'] = "原班次选择时间段";
            return [];
        }

        if($type!='gongxiu'){
            if(is_numeric($timeMarkOne)&&is_numeric($timeMarkTwo)){
                if($timeMarkOne!=$timeMarkTwo){
                    $this->serializer['errno']   = 0;
                    $this->serializer['status']   = false;
                    $this->serializer['message'] = "班次不属于同一时间段，请重新选择";
                    return [];
                }
            }
        }
        $shiftypelist=$resultmodel->getShiftTypeByDateAndScheduleId($schedule_id,$date);
        $restshift=array();
        foreach ($shiftypelist as $key_s => $value_s) {
            if($value_s['shift_type_id']==0){
                $restshift[$key_s]=$value_s;
            }
        }
         //该计划中所有改天上班人员名单
        $shifOnEmp=array_column($shiftypelist, 'emp_number');
        $work_station=$this->workStation;
        $allEmp=$empmodel->getEmpByWorkStation($work_station);
        $allEmp=array_column($allEmp, null,'emp_number');
        $changEmpListLast=array();
        $changEmpList=array();
        $schedule=$schedulemodel->getScheduleById($schedule_id);

        if($schedule->is_confirm==1 && $schedule->is_show==1){
            if(is_numeric($type)){
                $changEmpLists=$resultmodel->getResutByIdAndDateAndType($schedule_id,$date,$type);
                $changEmpLists=array_column($changEmpLists, null,'emp_number');
                $changEmpList=array_column($changEmpLists,'emp_number');

                if($timeMarkOne==0){
                    $changEmpListLast=$changEmpList;
                }else{
                    //获取临时结果表中该计划该时间段的员工
                    $changEmpListLast=$typedetailmodel->getReslutFromTempByTypeAndMark($date,$type,$timeMarkOne,$schedule_id);
                    $changEmpListLast=array_column($changEmpListLast, 'emp_number');

                    if(count($changEmpListLast>0)){
                         $changEmpListLast=array_merge($changEmpListLast,$changEmpList);
                    }else{
                        $changEmpListLast=$changEmpList;
                    }

                    $changEmpListLast=array_unique($changEmpListLast);

                }
            }else if($type=='gongxiu'){
                $noShifEmp=array_column($restshift, 'emp_number');
                //获取休息的人员列表
                $changEmpListLast=$noShifEmp;
            }else{//如果是假。，更具假类型和日期查找符合的员工
                $changEmpListLast=$noShifEmp;
            }
               
        }
        if(null!=$changEmpListLast){
            foreach ($changEmpListLast as $key => $chanEmp) {
                $empName['emp_name']=$allEmp[$chanEmp]['emp_firstname'];
                $empName['emp_number']=$chanEmp;
                $cur_date[]=$empName;
            }

            $this->serializer['errno']   = 0;
            $this->serializer['status']   = true;
            $this->serializer['message'] = "获取人员列表成功";
            return $cur_date;


        }else{
            $this->serializer['errno']   = 0;
            $this->serializer['status']   = false;
            $this->serializer['message'] = "没有符合的员工信息";
            return [];
        }
        
        
    }


    /**
     * @SWG\Post(path="/web-chat-shift/change-apply",
     *     tags={"微信-shift-调班申请"},
     *     summary="提交调班申请",
     *     description="提交调班申请",
     *     produces={"application/json"},
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "Token",
     *        description = "Token 310aa76f13eb634e0894b43bd25f0bfefa196b4b",
     *        required = true,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "schedule_id",
     *        description = "班次计划id",
     *        required = false,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "confirm_emp",
     *        description = "被调班次人员的工资号",
     *        required = false,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "shift_date",
     *        description = "要调班的日期",
     *        required = false,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "sup_employee",
     *        description = "审核人工资号",
     *        required = false,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "approver",
     *        description = "审核人姓名",
     *        required = false,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "orange_type",
     *        description = "原始班次",
     *        required = false,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "confirm_type",
     *        description = "被调班次",
     *        required = false,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "timeMarkOne",
     *        description = "第一个时间段",
     *        required = false,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "timeMarkTwo",
     *        description = "第二个时间段",
     *        required = false,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "chaoId",
     *        description = "抄送人工资号",
     *        required = false,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "chaoName",
     *        description = "抄送人姓名",
     *        required = false,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "note",
     *        description = "申请理由",
     *        required = false,
     *        type = "integer",
     *     ),
     *     @SWG\Response(
     *         response = 200,
     *         description = "返回技能类型列表"
     *     ),



     * )
     *
    **/
    public function actionChangeApply()
    {


        $post=Yii::$app->request->post();
        $schedule_id = $post['schedule_id']; 
        $shift_date = $post['shift_date']; 
        $orange_emp = $this->empNumber; 
        $confirm_emp = $post['confirm_emp'];//需要与谁调班
        $shift_reason = $post['note'];//申请理由
        $orangeType=$post['orange_type'];//原班次的ID
        $confirmType=$post['confirm_type'];//新班次的ID
        $sup_employees=$post['sup_employee'];//审核人id
        $chaoId = isset($post['chaoId'])?$post['chaoId']:'';   //抄送人ID
        $chaoName = isset($post['chaoName'])?$post['chaoName']:'';    //抄送人名
        $timeMark = $post['timeMarkOne'];   //时间段标记
        $chao_arr = explode(',',$chaoId);

        $work_station=$this->workStation;
        $attendmodel=new AttendanceRecord;
        $applymodel=new ShiftChangeApply;
        $resultmodel=new ShiftResult;

        $if_daka_orange=$attendmodel->getAttendanceRecordByWB($orange_emp,$shift_date);
        $if_daka_confrim=$attendmodel->getAttendanceRecordByWB($confirm_emp,$shift_date);

        $param='申请人：'.$orange_emp.';被申请人:'.$confirm_emp.';申请日期:'.$shift_date.';申请人打卡返回信息:'.$if_daka_orange.';被请人打卡返回信息:'.$if_daka_confrim.';调班时间段:'.$timeMark;

        if($if_daka_orange==-1){
            $this->serializer['errno']   = 0;
            $this->serializer['status']   = false;
            $this->serializer['message'] = "您有一条打卡信息，不允许调班";
            return [];
        }

        if( $if_daka_confrim==-1){
            $this->serializer['errno']   = 0;
            $this->serializer['status']   = false;
            $this->serializer['message'] = "您有一条打卡信息，不允许调班";
            return [];
        }

        if($if_daka_orange >0){
            if($timeMark !=$if_daka_orange){

                $this->serializer['errno']   = 0;
                $this->serializer['status']   = false;
                $this->serializer['message'] = "您的班次时间段与打卡时间段冲突，不允许调班";
                return [];

            }
        }

        if($if_daka_confrim>0){
            if($timeMark != $if_daka_confrim){
                $this->serializer['errno']   = 0;
                $this->serializer['status']   = false;
                $this->serializer['message'] = "被申请人班次时间段与打卡时间段冲突，不允许调班";
                return [];
            }
        }
        
    
        $login_emp=$this->empNumber;
        $sup_employees=explode(',', $sup_employees);
        $time1=strtotime($shift_date);
        $time3=strtotime(date('Y-m-d',time()));

        if($time1<$time3){
            $this->serializer['errno']   = 0;
            $this->serializer['status']   = false;
            $this->serializer['message'] = "不能调节已上班次";
            return [];
        }

        if(!strtotime($shift_date)){

            $this->serializer['errno']   = 0;
            $this->serializer['status']   = false;
            $this->serializer['message'] = "不是正确的时间格式";
            return [];
        }
        //查询审核表中是否有调班申请

        $inShenHeOr=$applymodel->getShiftChangeApply($orange_emp);

        $inShenHeOr2=$applymodel->getShiftChangeApply2($confirm_emp);

        $inShenHeOr3=$applymodel->getShiftChangeApply($confirm_emp);

        $inShenHeOr4=$applymodel->getShiftChangeApply2($orange_emp);

    
        if(count($inShenHeOr)>0|| count($inShenHeOr2)>0 ||count($inShenHeOr3)>0|| count($inShenHeOr4)>0 ){
            $this->serializer['errno']   = 0;
            $this->serializer['status']   = false;
            $this->serializer['message'] = "申请人/被申请人有一条申请正在审核中，请先处理";
            return [];
        }


        $leavemodel=new LeaveEntitlement;
        $typemodel=new ShiftType;

        $oran_leave=$leavemodel->judgeUsedLeave($orange_emp,$shift_date);
        //原始班次信息
        $orangeTypEntity=$typemodel->getShifTypeById($orangeType);

        //判断是否是上午半天班
        $orange_is_half=$orangeTypEntity['is_work_half'];

        $transaction = Yii::$app->db->beginTransaction();

        try {

            $time=date('Y-m-d H:i:s',time());
            $newShiftType =$typemodel->getShifTypeById($confirmType);
            $is_approval = $newShiftType['is_approval'];
            $shiftapply=new ShiftChangeApply;
            $applydata['ShiftChangeApply']['schedule_id']=$schedule_id;
            $applydata['ShiftChangeApply']['orange_emp']=$orange_emp;
            $applydata['ShiftChangeApply']['confirm_emp']=$confirm_emp;
            $applydata['ShiftChangeApply']['shift_date']=$shift_date;
            $applydata['ShiftChangeApply']['reason_shift']=$shift_reason;

            if($is_approval){
                $applydata['ShiftChangeApply']['status']='1';
            }else{
                $applydata['ShiftChangeApply']['status']='2';
            }

            $applydata['ShiftChangeApply']['create_at']=$time;
            $applydata['ShiftChangeApply']['orange_type']=$orangeType;
            $applydata['ShiftChangeApply']['confirm_type']=$confirmType;
            $applydata['ShiftChangeApply']['time_mark']=$timeMark;
               
            
            if(!$shiftapply->saveApply($applydata)){
                throw new \Exception();
            }

            $shift_apply_id=$shiftapply->id;

            if(!$is_approval){
                $result = $resultmodel->confirmShiftNoLeave($shiftapply->schedule_id,$shiftapply->shift_date,$shiftapply->orange_emp,$shiftapply->confirm_emp,$shiftapply->orange_type,$shiftapply->confirm_type,$shiftapply->time_mark,$work_station,$orangeTypEntity,$newShiftType); 

                if($result['status']==true){
                    $shiftapply->status='2';
                    if(!$shiftapply->save()){
                        throw new \Exception();
                    }
                }else{
                    throw new \Exception();
                }
            }

            $a = array();
            //审核表中插入新数据
            foreach ($sup_employees as $key => $sup_employee) {
                $approverTab=new ApproverTab;
                $approverdata['ApproverTab']['sup_employee']=$sup_employee;
                $approverdata['ApproverTab']['sub_employee']=$orange_emp;
                $approverdata['ApproverTab']['leave_id']='';
                $approverdata['ApproverTab']['shift_apply_id']=$shift_apply_id;
                $approverdata['ApproverTab']['overtime_id']='';
                $approverdata['ApproverTab']['attend_id']='';
                $approverdata['ApproverTab']['app_type']='4';
                $approverdata['ApproverTab']['chao_id']=$chaoId;
                $approverdata['ApproverTab']['chao_name']=$chaoName;
                $approverdata['ApproverTab']['witness_id']='';
                $approverdata['ApproverTab']['agree_employee']='';
                

                if($is_approval){
                    $status = '1';
                }else{
                    $status = '2';
                }

                $approverdata['ApproverTab']['status']=$status;

                if(!$approverTab->addApprover($approverdata)){
                    
                    throw new \Exception();
                }

                
                $approverTabId=$approverTab->getPrimaryKey();

                //创建消息
                $title='您收到一条调班申请';
                $targetType='4';
                $targetId=$approverTabId;
                $sendId=$login_emp;//发送人emp
                $receiverId=$sup_employee;//审批人emp
                $sendTimeStamp=time();
                $user_message_table=$approverTab->getMessageTable('user_message',$receiverId); //消息根据接受人emp判断插入具体哪一个表
                $user_message_detail_table=$approverTab->getMessageTable('user_message_detail',$receiverId);



                $empmodel=new Employee;
                $sender=$empmodel->getEmpByNum($sendId);
                $sender_name=$sender['emp_firstname'];
                
                $confirment=$empmodel->getEmpByNum($confirm_emp);
                $confirm_name=$confirment['emp_firstname'];
         
                $content=$sender_name.'申请与'.$confirm_name.'调班';
                $param = array();
                $param['type'] = 4;
                $param['approver'] = $sup_employee;
                $param['sendId'] = $sendId;
                $param['firsteHead'] = '您好，您有一条新审核提醒';
                $param['keyword2'] = date('Y-m-d H:i:s');
                $param['keyword3'] = '调班申请';
                $param['footer'] = $sender_name.'申请与'.$confirm_name.'调班';
                $param['url'] = 'my-approval';
                if($is_approval){
                    // $a[] =httpPostByYii($param);
                }
            }


            /**
             * pan 5.17新加给抄送人发送消息
             */
            /*foreach($chao_arr as $v){
                $title = '您收到一条调班申请'; 
                $targetId = $targetId ;   //不管审核表有几条记录 只要有一个ID 就可以找到申请记录 所以这里可以填写 上面循环的 审核ID的其中一个ID就可以了
                $targetType = 4;
                $receiverId = $v;
                $content = $sender_name.'申请调班,请求查看';
                $connection = Yii::$app->db; 
                $sql="insert into $user_message_table (`title`, `targetType`,`targetId`,`sendId`, `receiverId`, `sendTimeStamp`) values('$title',$targetType,$targetId,$sendId,$receiverId,$sendTimeStamp)";
                $command = $connection->createCommand($sql)->execute(); 
                $messageId=$connection->getLastInsertID();
                $sql2="insert into $user_message_detail_table (`messageId`, `content`) values($messageId,'$content')";
                $command = $connection->createCommand($sql2)->execute(); 
                $param = array();
                $param['type'] = 4;
                $param['approver'] = $v;
                $param['sendId'] = $sendId;
                $param['firsteHead'] = '您好，您收到一条调班申请抄送';
                $param['keyword2'] = date('Y-m-d H:i:s');
                $param['keyword3'] = '调班申请';
                $param['footer'] = $sender_name.'申请调班';
                $param['url'] = 'news';
                $a[] =httpPostByYii($param);
            }*/
            $transaction->commit();

            $this->serializer['errno']   = 0;
            $this->serializer['status']   = true;
            $this->serializer['message'] = "成功提交申请";
            return $a;
            
        } catch (\AuthenticationServiceException $e) {
            $transaction->rollback();
            $this->serializer['errno']   = 0;
            $this->serializer['status']   = false;
            $this->serializer['message'] = "提交审核失败";
        }

    }


    /**
     * @SWG\Post(path="/web-chat-shift/shift",
     *     tags={"微信-shift-调班申请"},
     *     summary="查询某个人的班次信息",
     *     description="查询某个人的班次信息",
     *     produces={"application/json"},
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "Token",
     *        description = "Token 310aa76f13eb634e0894b43bd25f0bfefa196b4b",
     *        required = true,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "scheduleId",
     *        description = "班次计划id",
     *        required = false,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "ChangeshiftDate",
     *        description = "要调班的日期",
     *        required = false,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "newType",
     *        description = "被调的班次",
     *        required = false,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "timeMarkOne",
     *        description = "第一个时间段",
     *        required = false,
     *        type = "integer",
     *     ),
     *     @SWG\Parameter(
     *        in = "formData",
     *        name = "timeMarkTwo",
     *        description = "第二个时间段",
     *        required = false,
     *        type = "integer",
     *     ),
     *     @SWG\Response(
     *         response = 200,
     *         description = "返回技能类型列表"
     *     ),
     * )
     *
    **/
    public function actionShift()
    {
        var_dump('aaa');exit;
        $post=Yii::$app->request->post();
        $start_date = $post['current_date'];
        $empNum=$this->empNumber;

        $resultmodel=new ShiftResult;
        $empmodel=new Employee;
        $shiftordermodel=new ShiftOrderBy;
        $typedetailmodel=new ShiftTypeDetail;
        $schedulemodel=new Schedule;

        if(!strtotime($start_date)){
          
            $this->serializer['errno']   = 0;
            $this->serializer['status']   = false;
            $this->serializer['message'] = "不是正确的时间格式";
            return [];
        }

        $data_to=date("Y-m-d",strtotime("+21 day",strtotime($start_date)));//未来一周的日期
        $data_dur=$this->prDates($start_date,$data_to);//中间间隔的日期

        $shiftList = $this->getShiftService()->getRosterResultAllByEmpAndDate($empNum,$start_date,$data_to);//获取员工排班
        $emp_array=array();
        //获取输入日期的班次
        $shiftTypeService=new \shiftTypeService();
        $employeeService=new \EmployeeService;
        //获取所在组
        $work_station=$employeeService->getEmployeeByEmpNumber($empNum)->work_station;

        $shiftType=$this->getShiftService()->getShiftTypeByStation($work_station);
        $shiftType=array_column($shiftType, NULL, 'id');

        
        if(null!=$shiftList){
            foreach ($shiftList as $key => $shift) {


                $shiftTypeDetail=$shiftTypeService->getShitReslutFromTemp($empNum,$shift['shift_date']);

                if(count($shiftTypeDetail)>0){

                    $type_id_0=$shiftTypeDetail[0]['shift_type_id'];
                    $type_id_1=$shiftTypeDetail[1]['shift_type_id'];

                    $time_mark_0=$shiftTypeDetail[0]['time_mark'];
                    $time_mark_1=$shiftTypeDetail[1]['time_mark'];

                    $type_name_0=$shiftTypeDetail[0]['WorkShiftType']['name'];
                    $type_name_1=$shiftTypeDetail[1]['WorkShiftType']['name'];

                    $start_time_one=date('H:i',strtotime($shiftTypeDetail[0]['start_time']));
                    $end_time_one=date('H:i',strtotime($shiftTypeDetail[0]['end_time']));

                    $start_time_two=date('H:i',strtotime($shiftTypeDetail[1]['start_time']));
                    $end_time_two=date('H:i',strtotime($shiftTypeDetail[1]['end_time']));

                    $type_name_tmp=$shiftType[$type_id_0]['name'];
                    if($type_id_0 && $type_id_1){
                        if($type_id_0!=$type_id_1){
                            $type_name_tmp= $type_name_tmp.'/'.$shiftType[$type_id_1]['name'];
                        }
                    }else{
                        if($time_mark_0==1){
                             $type_name_tmp= $type_name_tmp.'/休';
                        }else{
                             $type_name_tmp= '休/'.$type_name_tmp;
                        }
                    }

                }else{
                    if($shift['shift_type_id']==-1){
                        $type_name='夜休';
                        $start_time_one='00:00';
                        $end_time_one='00:00';
                        $start_time_two='00:00';
                        $end_time_two='00:00';
                    }else if($shift['shift_type_id']==0 && $shift['leave_type']>0){
                        $type_name='假';
                        $start_time_one='00:00';
                        $end_time_one='00:00';
                        $start_time_two='00:00';
                        $end_time_two='00:00';
                    }else if($shift['shift_type_id']==0 && $shift['rest_type']>0){
                        $type_name='休';
                        $start_time_one='00:00';
                        $end_time_one='00:00';
                        $start_time_two='00:00';
                        $end_time_two='00:00';
                    }else{
                        $type_name=$shift['WorkShiftType']['name'];
                        $start_time_one=date('H:i',strtotime($shift['WorkShiftType']['start_time']));
                        $end_time_one=date('H:i',strtotime($shift['WorkShiftType']['end_time_afternoon']));
                        $start_time_two=date('H:i',strtotime($shift['WorkShiftType']['start_time_afternoon']));
                        $end_time_two=date('H:i',strtotime($shift['WorkShiftType']['end_time']));
                    }
                }




                if($shift['shift_date']==$start_date){
                    $weekDay=$this->get_week($shift['shift_date']);
                    
                    //如果存在两个半天班情况
                    if(count($shiftTypeDetail)>0){

                        $shift_cur[$key]['emp_number']=$empNum;
                        $shift_cur[$key]['date']=$shiftTypeDetail[0]['shift_date'];;
                        $shift_cur[$key]['scheduleId']=$shiftTypeDetail[0]['schedule_id'];
                        $weekDay=$this->get_week($shiftTypeDetail[0]['shift_date']);
                        $shift_cur[$key]['week']=$weekDay;
                        $shift_cur[$key]['name']=$type_name_tmp;

                        if($start_time_one!='00:00' || $end_time_one!='00:00'){
                            $shift_cur[$key]['time'][0]['id']=$time_mark_0;
                            $shift_cur[$key]['time'][0]['start_time']=$start_time_one;
                            $shift_cur[$key]['time'][0]['end_time']=$end_time_one;
                            $shift_cur[$key]['time'][0]['time_combine']=$start_time_one.'-'.$end_time_one;
                            $shift_cur[$key]['time'][0]['type_name']=$type_name_0;
                        }
                        
                        if($start_time_two!='00:00' || $end_time_two!='00:00'){
                            $shift_cur[$key]['time'][1]['id']=$time_mark_1;
                            $shift_cur[$key]['time'][1]['start_time']= $start_time_two;
                            $shift_cur[$key]['time'][1]['end_time']= $end_time_two;
                            $shift_cur[$key]['time'][1]['time_combine']= $start_time_two.'-'. $end_time_two;
                            $shift_cur[$key]['time'][1]['type_name']=$type_name_1;
                        }

                    }else{
                        $shift_cur[0]['emp_number']=$shift['emp_number'];
                        $shift_cur[0]['name']=$type_name;
                        $shift_cur[0]['date']=$shift['shift_date'];
                        $weekDay=$this->get_week($shift['shift_date']);
                        $hour_count = $this->timediff($shift_cur['start_time'],$shift_cur['end_time']);
                        $shift_cur[0]['hour_count']=$hour_count['H'];
                        $shift_cur[0]['min_count']=$hour_count['S'];
                        $shift_cur[0]['week']=$weekDay;
                        if($start_time_one!='00:00' || $end_time_one!='00:00'){
                            $shift_cur[0]['time'][0]['id']=1;
                            $shift_cur[0]['time'][0]['start_time']=$start_time_one;
                            $shift_cur[0]['time'][0]['end_time']=$end_time_one;
                            $shift_cur[0]['time'][0]['time_combine']=$start_time_one.'-'.$end_time_one;
                            $shift_cur[0]['time'][0]['type_name']=$type_name;
                        }
                        
                        if($start_time_two!='00:00' || $end_time_two!='00:00'){
                            $shift_cur[0]['time'][1]['id']=2;
                            $shift_cur[0]['time'][1]['start_time']=$start_time_two;
                            $shift_cur[0]['time'][1]['end_time']=$end_time_two;
                            $shift_cur[0]['time'][1]['time_combine']=$start_time_two.'-'.$end_time_two;
                            $shift_cur[0]['time'][1]['type_name']=$type_name;
                        }
                       
                    }

                }else{
                   
                    
                    if(count($shiftTypeDetail)>0){
      
                        $data[$key]['emp_number']=$empNum;
                        $data[$key]['date']=$shiftTypeDetail[0]['shift_date'];
                        $data[$key]['scheduleId']=$shiftTypeDetail[0]['schedule_id'];
                        $weekDay=$this->get_week($shiftTypeDetail[0]['shift_date']);
                        $data[$key]['week']=$weekDay;
                        $data[$key]['name']=$type_name_tmp;

                        if($start_time_one!='00:00' || $end_time_one!='00:00'){
                            $data[$key]['time'][0]['id']=$time_mark_0;
                            $data[$key]['time'][0]['start_time']=$start_time_one;
                            $data[$key]['time'][0]['end_time']=$end_time_one;
                            $data[$key]['time'][0]['type_name']=$type_name_0;
                            $data[$key]['time'][0]['time_combine']=$start_time_one.'-'.$end_time_one;
                        }

                        if($start_time_two!='00:00' || $end_time_two!='00:00'){
                            $data[$key]['time'][1]['id']=$time_mark_1;
                            $data[$key]['time'][1]['start_time']= $start_time_two;
                            $data[$key]['time'][1]['end_time']= $end_time_two;
                            $data[$key]['time'][1]['type_name']= $type_name_1;
                            $data[$key]['time'][1]['time_combine']= $start_time_two.'-'. $end_time_two;

                        }

                    }else{

                        $emp_array[$key]['emp_number']=$shift['emp_number'];
                        $emp_array[$key]['name']= $type_name;
                        $emp_array[$key]['date']=$shift['shift_date'];
                        $weekDay=$this->get_week($shift['shift_date']);
                        $emp_array[$key]['week']=$weekDay;
                        $emp_array[$key]['time'][0]['id']=1;
                        $emp_array[$key]['time'][0]['start_time']='00:00';
                        $emp_array[$key]['time'][0]['end_time']='00:00';
                        $emp_array[$key]['time'][0]['type_name']=$type_name;
                        $emp_array[$key]['time'][0]['time_combine']=$start_time_one.'-'.$end_time_one;

                        if($start_time_one!='00:00' || $end_time_one!='00:00'){
                            $emp_array[$key]['time'][0]['id']=1;
                            $emp_array[$key]['time'][0]['start_time']=$start_time_one;
                            $emp_array[$key]['time'][0]['end_time']=$end_time_one;
                            $emp_array[$key]['time'][0]['type_name']=$type_name;
                            $emp_array[$key]['time'][0]['time_combine']=$start_time_one.'-'.$end_time_one;
                        }
          

                        if($start_time_two!='00:00' || $end_time_two!='00:00'){

                            $emp_array[$key]['time'][1]['id']=2;
                            $emp_array[$key]['time'][1]['start_time']=$start_time_two;
                            $emp_array[$key]['time'][1]['end_time']=$end_time_two;
                            $emp_array[$key]['time'][1]['type_name']=$type_name;
                            $emp_array[$key]['time'][1]['time_combine']=$start_time_two.'-'.$end_time_two;
                             
                        }

                        $data_no= $emp_array;
                    }
                }

                
            }
            if(null!=$data && null!= $data_no){
                $data=$data+$data_no;
            }else if( null==$data && null!= $data_no){
                $data=$data_no;
            }if(null!= $data && null == $data_no){
                $data=$data;
            }

        
            $data=array_values($data);
            $shift_cur=array_values($shift_cur);
            array_multisort(array_column($data,'date'),SORT_ASC,$data);


            $result['status'] = true;
            $result['message'] = '获取员工排班成功';
            $result['cur_date'] = $shift_cur;
            $result['shiftdata'] = $data;

            echo json_encode($result);die;

        }else{

            $this->serializer['errno']   = 0;
            $this->serializer['status']   = false;
            $this->serializer['message'] = "期间没有排班信息";
            return [];
        }
        if(null!=$changEmpListLast){
            foreach ($changEmpListLast as $key => $chanEmp) {
                $empName['emp_name']=$allEmp[$chanEmp]['emp_firstname'];
                $empName['emp_number']=$chanEmp;
                $cur_date[]=$empName;
            }

            $this->serializer['errno']   = 0;
            $this->serializer['status']   = true;
            $this->serializer['message'] = "获取人员列表成功";
            return $cur_date;


        }else{
            $this->serializer['errno']   = 0;
            $this->serializer['status']   = false;
            $this->serializer['message'] = "没有符合的员工信息";
            return [];
        }
        
        
    }

}