<?php

namespace common\models\attendance;

use Yii;
use \common\models\attendance\base\AttendanceRecord as BaseAttendanceRecord;
use yii\helpers\ArrayHelper;

use common\models\shift\ShiftResult;
use common\models\shift\Schedule;
use common\models\shift\ShiftType;
use common\models\shift\ShiftTypeDetail;


/**
 * This is the model class for table "ohrm_attendance_record".
 */
class AttendanceRecord extends BaseAttendanceRecord
{

    public function behaviors()
    {
        return ArrayHelper::merge(
            parent::behaviors(),
            [
                # custom behaviors
            ]
        );
    }

    public function rules()
    {
        return ArrayHelper::merge(
            parent::rules(),
            [
                # custom validation rules
            ]
        );
    }

    public function getAttendanceRecord($empNumber,$date){
        if(!empty($date)){
            $from = $date . " " . "00:" . "00:" . "00";
            $end = $date . " " . "23:" . "59:" . "59";
        }

         $query = self::find();

         $query->andWhere("employee_id = :empNumber",[':empNumber'=>$empNumber]);

         $query->andWhere("first_daka_time >= :from",[':from'=>$from]);
         $query->andWhere("first_daka_time <= :end",[':end'=>$end]);

         $query->andWhere("is_in_status = 0");
         $query->andWhere("is_out_status = 0");

         $list = $query->one();

         return $list;

    }

    /*
     * 获取用户班次信息   
     */
    public function getEmployeeWorkDetail($search){

        $query = ShiftResult::find();
        $query->joinWith('schedule');
        $query->joinWith('shiftType');

        if(!empty($search['empNumber'])){
            $query->andWhere('ohrm_work_shift_result.emp_number = :empNumber',[':empNumber'=>$search['empNumber']]);
        }
        if(!empty($search['date'])){
            $query->andWhere("ohrm_work_shift_result.shift_date = :date",[':date'=>$search['date']]);
        }

         $query->andWhere('ohrm_work_schedule.is_show = 1');
         $query->andWhere('ohrm_work_schedule.is_confirm = 1');
        

        $list = $query->asArray()->one();
        return $list;
    }
    /**
     * 获取换班信息
     * @param  [type] $search [description]
     * @return [type]         [description]
     */
    public function getHuanWorkshift($search){
        $query = ShiftTypeDetail::find();
        $query->joinWith('shiftType');
        if(!empty($search['empNumber'])){
            $query->andWhere('ohrm_work_shift_type_detail.emp_number = :empNumber',[':empNumber'=>$search['empNumber']]);
        }
        if(!empty($search['date'])){
            $query->andWhere("ohrm_work_shift_type_detail.shift_date = :date",[':date'=>$search['date']]);
        }
        $list = $query->asArray()->all();

        return $list;
    }
    /**
     * 根据日期获取员工的班次时间
     * @param  [type] $empNumber [description]
     * @param  [type] $date      [description]
     * @return [type]            [description]
     */
    public function getWorkShiftByDate($empNumber,$date){
        $work_start_time = null;
        $work_middend_time = null;
        $work_middstart_time = null;
        $work_end_time = null;
        $work_date = null;
        $wname = '';
        $shiftId =null ; 
        $remark = '';
        $is_amont_work = 0;

        $is_daka_half = 0;
        $clock_in = 0;

        $noeDate = $date; 

        $arr = array('empNumber'=>$empNumber,'date'=>$noeDate);
        //$arr = array('empNumber'=>736,'date'=>'2018-06-06');

        $huan = $this->getHuanWorkshift($arr);

        if($huan){   //有换班
            foreach($huan as $key=>$val){
                $start_time = date('H:i',strtotime($val['start_time']));
                $end_time =date('H:i',strtotime($val['end_time']));

                $wname .= '/'.$val['shiftType']['name'];
                $remark .= '/'.$val['shiftType']['remark'];
        
                if(!$is_amont_work){
                    $is_amont_work = $val['shiftType']['is_amont_work'];
                }
                $shiftId = $val['shift_result_id'];


                if($val['shiftType']['is_daka_half']){
                    $is_daka_half = 1 ;
                }
                if($val['shiftType']['clock_in']){
                    $clock_in = 1 ;
                }
                
                if($val['time_mark']==0){
                     $work_start_time = $start_time;
                     $work_end_time = $end_time;
                }

                if($val['time_mark']==1){
                    $work_start_time = $start_time;
                    $work_middend_time = $end_time;
                }
                if($val['time_mark']==2){
                    $work_middstart_time = $start_time;
                    $work_end_time = $end_time;
                }
            }
        }else{
            $date = date('Y-m-d',strtotime('-1 days',strtotime($noeDate)));
            $arr = array('empNumber'=>$empNumber,'date'=>$date);
  
            $shift = $this->getEmployeeWorkDetail($arr);
            if($shift){
                if(!empty($shift['shiftType'])){
                    if($shift['shiftType']['is_night_shift'] ==1 ){  //夜班

                    }else{
                        $arr = array('empNumber'=>$empNumber,'date'=>$noeDate);
                        $shift = $this->getEmployeeWorkDetail($arr);
                        $date = $noeDate;
                    }
                }else{
                    $arr = array('empNumber'=>$empNumber,'date'=>$noeDate);
                    $shift = $this->getEmployeeWorkDetail($arr);
                    $date = $noeDate;
                }
            }else{
 
                $arr = array('empNumber'=>$empNumber,'date'=>$noeDate);
                $shift = $this->getEmployeeWorkDetail($arr);
                $date = $noeDate;
            }


            if(!empty($shift)&&$shift['shift_type_id']>0){
                $workShiftId = $shift['id'] ;
                $firstWorkTime = $shift['shift_date'];
                $wname = $shift['shiftType']['name'];

                $shiftId = $shift['id'];

                if($shift['shiftType']['is_daka_half']){
                    $is_daka_half = 1 ;
                }
                if($shift['shiftType']['clock_in']){
                    $clock_in = 1 ;
                }
                $work_start_time =$shift['shiftType']['start_time'];
                $work_end_time =$shift['shiftType']['end_time'];

                $work_middstart_time = $shift['shiftType']['start_time_afternoon'];
                $work_middend_time = $shift['shiftType']['end_time_afternoon'];    
            }else{
                return false;
            }
            
        }

        $back['work_start_time'] = $work_start_time;
        $back['work_middend_time'] = $work_middend_time;
        $back['work_middstart_time'] = $work_middstart_time;
        $back['work_end_time'] = $work_end_time;
        $back['work_date'] = $date;
        $back['work_name'] = trim($wname,'/');
        $back['is_daka_half'] = $is_daka_half;
        $back['clock_in'] = $clock_in;
        $back['shiftId'] = $shiftId;

        $back['remark'] = trim($remark,'/');
        $back['is_amont_work'] = $is_amont_work;
        return $back ;
    }
    /**
     * 根据ID 获取打卡信息
     * @param  [type] $empNumber [description]
     * @param  [type] $date      [description]
     * @return [type]            [description]
     */
    public function getAttendanceRecordById($id){
        
         $query = self::find();

         $query->where("id = :id",[':id'=>$id]);

         $list = $query->one();

         return $list;

    }

    /**
     * 给吴斌写的函数 查找员工当天的打卡情况并返回可以调班
     * @param  [type] $employeeId [description]
     * @param  [type] $date       [description]
     * @return  -1 不能调班 0全天可以调班 1上午可以调班 2下午可以调班         
     */
    public function getAttendanceRecordByWB($employeeId, $date,$iszheng=1) {

        $nowTime = date('Y-m-d');
        if($nowTime<$date){
            return 0;
        }

        if(!empty($date)){
            $from = $date . " " . "00:" . "00:" . "00";
            $end = $date . " " . "23:" . "59:" . "59";
        }

        $query = self::find();
        $query->where('employee_id = :employeeId',[':employeeId'=>$employeeId]);

        if(!empty($date)){
            $query->andWhere("first_daka_time >=:from ",[':from'=>$from]);
            $query->andWhere("first_daka_time <=:end ",[':end'=>$end]);
            //$query->andWhere("first_daka_time <= ?", $end);
        }

        if($iszheng==1){
            $query->andWhere('is_in_status = 0 '); 
        }else if($iszheng == 2){
            $query->andWhere('is_in_status > 0 '); 
        }
        $query->andWhere('is_out_status = 0 '); 
        $query->orderBy('first_daka_time desc');


              
        $records = $query->asArray()->all();

        if (empty($records)) {
            return 0;
        } else {
            foreach($records as $attr){
                if($attr['state']=='PUNCHED IN'){
                    if(empty($attr['punch_in_user_time'])){
                        return 1;
                    }else if(empty($attr['punch_out_user_time'])){
                        return 2;
                    }else{
                        return -1;
                    }
                }else{
                    return -1;
                }
            }
            
        }
    }


    public function searchAttendanceRecordsByAPI($arr){
        $empNumber = !empty($arr['empNumber'])?$arr['empNumber']:null;
        $queryType = isset($arr['queryType'])?$arr['queryType']:null;
        $is_in_status = !empty($arr['is_in_status'])?$arr['is_in_status']:0;
        $id = !empty($arr['id'])?$arr['id']:null;

        $q = AttendanceRecord::find();

        $q->joinWith("employee");
//                

        if( !empty($empNumber)){
            if(is_array($empNumber)){
                $q->amdWhere(['in',"ohrm_attendance_record.employee_id", $empNumber]);
            } else {
                $q->andWhere(" ohrm_attendance_record.employee_id =:empNumber",[':empNumber'=>$empNumber]);
            }            
        } 
        if(1||$is_in_status===0){
            $q->andWhere("ohrm_attendance_record.is_in_status != 0");
        }
  
        if(!is_null($queryType)){     
            if($queryType==0){
                $q->andWhere('ohrm_attendance_record.is_in_status = 1 ');
            }else if($arr['queryType']==-1){
                $q->andWhere('ohrm_attendance_record.is_out_status = -1 ');
            }else{
                $q->andWhere('ohrm_attendance_record.is_out_status = 0 ');
            }
            $q->andWhere("ohrm_attendance_record.is_pro = :queryType",[':queryType'=>$queryType]);
        }else{
            // $q->andWhere('a.punchIsOutStatus = 0 ');
        }

        if($id){
            if (is_numeric($id) && $id> 0) {
                $q->andWhere('ohrm_attendance_record.id = :id', [':id'=>$id]);
                $result = $q->one();
            }else if (is_array($id)) {
                $q->andWhere(['in','ohrm_attendance_record.id',$id]);
                $q->orderBy('ohrm_attendance_record.create_time DESC');
                $result = $q->all();
            }
            
        }else{
            $q->orderBy('ohrm_attendance_record.create_time DESC');
            $result = $q->all();
        }

        //echo $q->createCommand()->getRawSql();die;
        return $result;
      
    }

}
