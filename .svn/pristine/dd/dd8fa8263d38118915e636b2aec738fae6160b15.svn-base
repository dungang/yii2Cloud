<?php

namespace common\models\performance;

use Yii;
use \common\models\performance\base\BonusCalculationManage as BaseBonusCalculationManage;
use yii\helpers\ArrayHelper;
use \common\models\performance\BonusCalculation;
use \common\models\performance\BonusCalculationList;
use \common\models\performance\BonusCalculationManageList;
use \common\models\subunit\Subunit;
use \common\models\user\User;


/**
 * This is the model class for table "ohrm_bonus_calculation_manage".
 */
class BonusCalculationManage extends BaseBonusCalculationManage
{

    public function behaviors()
    {
        return ArrayHelper::merge(
            parent::behaviors(),
            [
                # custom behaviors
            ]
        );
    }

    public function rules()
    {
        return ArrayHelper::merge(
            parent::rules(),
            [
                # custom validation rules
            ]
        );
    }

    public function getBonusCalculationManageSearch($search){
        $subunit = !empty($search['subunit'])?$search['subunit']:null;
        $status = !empty($search['status'])?$search['status']:null;
        $year = !empty($search['year'])?$search['year']:null;
        $customerId = $search['customerId'];

        $limit = $search['limit'];   //每页数 20
        $offset = $search['offset'];   //每页数 20


        $query = self::find();
        $query->where('customerId = :customerId',[':customerId'=>$customerId]);
        if($subunit){
            if(is_array($subunit)){
                $query->andWhere(['in','groupId',$subunit]);
            }else{
                $query->andWhere('groupId = :groupId',[':groupId'=>$groupId]);
            }
        }
        if($status){
            if(is_array($status)){
                $query->andWhere(['in','status',$status]);
            }else{
                $query->andWhere('status = :status',[':status'=>$status]);
            }
        }
        if($year){
            if(is_array($year)){
                $query->andWhere(['in','bonusDate',$year]);
            }else{
                $query->andWhere('bonusDate = :bonusDate',[':bonusDate'=>$year]);
            }
        }

        $count = $query->count();
        $query->orderBy('bonusDate desc');

        $query->offset($offset);
        $query->limit($limit);
        $list = $query->all();
        //$sql=$query ->createCommand()->getRawSql(); 
        //var_dump($sql);die;   

        return array('list'=>$list,'count'=>$count);
        
    }
    public function getBonusCalculationManage($customerId = null,$date = null,$groupId = null){
        $query = self::find();
        if($customerId){
            $query->andWhere('customerId = :customerId',[':customerId' => $customerId]);
        }
        if($date){
            $query->andWhere('bonusDate = :date',[':date' => $date]);
        }
        if($groupId){
            $query->andWhere('groupId = :groupId',[':groupId' => $groupId]);
        }
        
        $list  = $query->one();
        return $list;
    }
    public function getBonusCalculationManageById($id ){
        $query = self::find();
        
        $query->andWhere('id = :id',[':id' => $id]);
        
        $list  = $query->one();
        return $list;
    }
    public function getBonusCalculationManageBySub($date,$workStation){
        $query = self::find();
        $query->where('bonusDate = :date',[':date' => $date]);
        $query->andWhere('groupId = :workStation',[':workStation' => $workStation]);
        
        $list  = $query->one();
        return $list;
    }

    /**
     * 生成在线excel
     * @param  [type] $bonusDate  [description]
     * @param  [type] $customerId [description]
     * @param  [type] $header     [description]
     * @return [type]             [description]
     */
    public function saveExcelByManange($bonusDate,$customerId,$header){
        $BonusCalculation = new BonusCalculation();
        $BonusCalculationList = new BonusCalculationList();


        $data = $BonusCalculation->getListByDate($bonusDate,$customerId);

        foreach ($data as $key => $value) {
            $saveList = array();
            $list = $BonusCalculationList->getCalculationListByCaId($value->id,$value->groupId);
            
            $saveList[0] = array('0'=>$bonusDate.' '.$value->subunit->name);
            $saveList[1] = $header;
            foreach ($list as $k => $v) {
                $saveList[] = json_decode($v->sheetInfo);
            }

            $s = down_file_by_excel($saveList,$bonusDate.' '.$value->subunit->name,'excel');
            $d= OverwriteWithExcel($s,$value->sheetName);
            //@unlink($s);
        }


    } 


    public function getContentByDate($id,$groupId,$topGroupId,$bonusDate,$statusName){
        if($groupId==$topGroupId){

             $query = BonusCalculationManageList::find();
             
        }else{
            $query = BonusCalculationList::find();
            $query->andWhere('groupId = :groupId',[':groupId'=>$groupId]);
        }
        $query->select('count(*) as count,sum(percent20) as percent20,sum(percent80) as percent80');
        $query->andWhere('bonusDate = :bonusDate',[':bonusDate'=>$bonusDate]);
        $list = $query->asArray()->one();

        $Subunit = new Subunit();
        $sub = $Subunit->getWorkStationById($groupId);
        $backArr = array();
        if(empty($list['count'])){
            return $backArr;
        }
        $backArr[]= array('title'=>'奖金日期','val'=>date('Y年m月',strtotime($bonusDate))) ;
        $backArr[]= array('title'=>'组名','val'=>$sub->name) ;
        $backArr[]= array('title'=>'人数','val'=>$list['count']) ;
        $backArr[]= array('title'=>'基本工资','val'=>$list['percent20']) ;
        $backArr[]= array('title'=>'除20%外合计','val'=>$list['percent80']) ;
        $backArr[]= array('title'=>'状态','val'=>$statusName) ;
        return $backArr;
        
    }  

    public function xiaoduiContentByDate($id,$groupId,$topGroupId,$bonusDate){
        $query = BonusCalculationManageList::find();
        $query->select('count(*) as count,sum(percent20) as percent20,sum(percent80) as percent80');

        $query1 = BonusCalculationList::find();
        $query1->select('count(*) as count,sum(percent20) as percent20,sum(percent80) as percent80');
        if($groupId!=$topGroupId){
            $query1->andWhere('groupId = :groupId',[':groupId'=>$groupId]);
            $query->andWhere('groupId = :groupId',[':groupId'=>$groupId]);
        }
        $query->andWhere('bonusDate = :bonusDate',[':bonusDate'=>$bonusDate]);
        $query1->andWhere('bonusDate = :bonusDate',[':bonusDate'=>$bonusDate]);
        $list = $query->asArray()->one();

        $list1 = $query1->asArray()->one();
        $Subunit = new Subunit();
        $sub = $Subunit->getWorkStationById($groupId);

        $header[] = array('title'=>'组名','key'=>'subName','width'=>'80','align'=>'center');
        $header[] = array('title'=>'人数','key'=>'peopleConut','width'=>'80','align'=>'center');
        $header[] = array('title'=>'基本工资','key'=>'percent20','width'=>'80','align'=>'center');
        $header[] = array('title'=>'除20%外合计','key'=>'percent80','width'=>'80','align'=>'center');
        
        $header[] = array('title'=>'人数(上报)','key'=>'peopleConutSh','width'=>'80','align'=>'center');
        $header[] = array('title'=>'基本工资(上报)','key'=>'percent20Sh','width'=>'80','align'=>'center');
        $header[] = array('title'=>'除20%外合计(上报)','key'=>'percent80Sh','width'=>'80','align'=>'center');
        $header[] = array('title'=>'校验结果','key'=>'checkout','width'=>'80','align'=>'center');


        $jiao = 0 ;
        if($list['count']!=$list1['count']){
            $jiao = 1;
        }
        if($list['percent20']!=$list1['percent20']){
            $jiao = 1;
        }
        if($list['percent80']!=$list1['percent80']){
            $jiao = 1;
        }

        $backArr[0]['subName'] = $sub->name;
        $backArr[0]['peopleConut'] = $list['count'];
        $backArr[0]['percent20'] = $list['percent20'];
        $backArr[0]['percent80'] = $list['percent80'];
        $backArr[0]['peopleConutSh'] = $list1['count'];
        $backArr[0]['percent20Sh'] = $list1['percent20'];
        $backArr[0]['percent80Sh'] = $list1['percent80'];
        $backArr[0]['checkout'] = $jiao;



        return array('header'=>$header,'content'=>$backArr);

    }
    
    public function huiContentByDate($id,$groupId,$topGroupId,$bonusDate){
        $query = BonusCalculationManageList::find();
        $query->select('count(*) as count,sum(percent20) as percent20,sum(percent80) as percent80,groupId');
        $query->andWhere('bonusDate = :bonusDate',[':bonusDate'=>$bonusDate]);

        $query->groupby('groupId');
        $list = $query->asArray()->all();


        foreach ($list as $key => $value) {
            
        }

        $header[] = array('title'=>'组名','key'=>'subName','width'=>'80','align'=>'center');
        $header[] = array('title'=>'人数','key'=>'peopleConut','width'=>'80','align'=>'center');
        $header[] = array('title'=>'基本工资','key'=>'percent20','width'=>'80','align'=>'center');
        $header[] = array('title'=>'除20%外合计','key'=>'percent80','width'=>'80','align'=>'center');

        $backHeader = array();
        $backEnd = array();
        $backArr = array();

        $peopleConut = 0;
        $percent20 = 0;
        $percent80 = 0;
        $i = 0 ;
        $Subunit = new Subunit();
        foreach ($list as $key => $value) {
            $sub = $Subunit->getWorkStationById($value['groupId']);
            $arr['subName'] = $sub->name;
            $arr['peopleConut'] = $value['count'];
            $arr['percent20'] = $value['percent20'];
            $arr['percent80'] = $value['percent80'];
            $arr['id'] = $sub->id;

            $peopleConut += $value['count'];
            $percent20 += $value['percent20'];
            $percent80 += $value['percent80'];

            $backArr[] = $arr;

            $i++;
        }
        $backEnd['subName'] = '合计';
        $backEnd['peopleConut'] = $peopleConut;
        $backEnd['percent20'] = $percent20;
        $backEnd['percent80'] = $percent80;
        $backEnd['id'] = 0;

        array_push($backArr,$backEnd);

        return array('header'=>$header,'content'=>$backArr);
    }

    public function getBonusCalculationManageListBySub($groupId,$bonusDate,$customerId){
        $query = BonusCalculationManageList::find();
        $Subunit = new Subunit();
        $User = new User();
        if($groupId){
            $sub = $Subunit->getWorkStationById($groupId);
            $query->andWhere('groupId = :groupId',[':groupId'=>$groupId]);
            $subArr[$sub->id] = $sub->name;
        }else{
            $sub = $Subunit->getAllWorkStation($customerId);

            foreach ($sub as $key => $value) {
                $subArr[$value->id] = $value->name;
            }
        }

        $query->andWhere('bonusDate = :bonusDate',[':bonusDate'=>$bonusDate]);
        $query->andWhere('customerId = :customerId',[':customerId'=>$customerId]);

        $query->orderBy('groupId');
        $list = $query->asArray()->all();   
        $peopleConut = 0;
        $percent20 = 0;
        $percent80 = 0;
        $i = 1;
        $backArr = array();
        foreach ($list as $key => $value) {
            $user = $User->getSystemUsersByEmpNumber($value['emp_number']);

            $arr['serNumber'] = $i;            
            $arr['subName'] = $subArr[$value['groupId']];
            $arr['wagNumber'] = $user->user_name;
            $arr['percent20'] = $value['percent20'];
            $arr['percent80'] = $value['percent80'];

            $peopleConut += 1;
            $percent20 += $value['percent20'];
            $percent80 += $value['percent80'];

            $backArr[] = $arr;
            $i++;
        }
        $header[] = array('title'=>'序号','key'=>'serNumber','width'=>'80','align'=>'center');
        $header[] = array('title'=>'组名','key'=>'subName','width'=>'80','align'=>'center');
        $header[] = array('title'=>'工资号','key'=>'wagNumber','width'=>'80','align'=>'center');
        $header[] = array('title'=>'基本工资','key'=>'percent20','width'=>'80','align'=>'center');
        $header[] = array('title'=>'除20%外合计','key'=>'percent80','width'=>'80','align'=>'center');
        
        $backEnd['serNumber'] = '合计';
        $backEnd['subName'] = '';
        $backEnd['wagNumber'] = $peopleConut;
        $backEnd['percent20'] = $percent20;
        $backEnd['percent80'] = $percent80;
        

        array_push($backArr,$backEnd);

        return array('header'=>$header,'content'=>$backArr);
    }
    

    public function deleteBonusCalculationManageListBySub($groupId,$date){
        $query = new BonusCalculationManageList();
        $recod = $query->deleteAll(['groupId' =>$groupId,'bonusDate'=>$date]);
        return $recod;
    }
    public function deleteBonusCalculationListBySub($groupId,$date){
        $query = new BonusCalculationList();
        $recod = $query->deleteAll(['groupId' =>$groupId,'bonusDate'=>$date]);
        return $recod;
    }

    /**
     * 查找不是顶级组的所有状态为1的
     */
    public function getManageByStatus($bonusDate,$status,$topGroupId,$customerId){
        $query = BonusCalculationManage::find();

        $query->andWhere('bonusDate = :bonusDate',[':bonusDate'=>$bonusDate]);
        $query->andWhere('status != :status',[':status'=>$status]);
        $query->andWhere('groupId != :groupId',[':groupId'=>$topGroupId]);
        $query->andWhere('customerId = :customerId',[':customerId'=>$customerId]);
        $list = $query->one();  

        return $list;
    }


   
}
