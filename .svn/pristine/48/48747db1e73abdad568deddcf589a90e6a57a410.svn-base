<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\meeting\base;

use Yii;

/**
 * This is the base-model class for table "hs_hr_meeting".
 *
 * @property integer $id
 * @property integer $emp_number
 * @property string $meeting_name
 * @property integer $meeting_language
 * @property string $meeting_time
 * @property string $host_unit
 * @property integer $thesis_type
 * @property string $thesis_name
 * @property integer $is_exchange
 * @property integer $first_author_type
 * @property string $first_author
 * @property string $first_author_unit
 * @property integer $corresponding_author_type
 * @property string $corresponding_author
 * @property string $corresponding_author_unit
 * @property string $award_name
 * @property string $aliasModel
 */
abstract class Meeting extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'hs_hr_meeting';
    }

    /**
     * @return \yii\db\Connection the database connection used by this AR class.
     */
    public static function getDb()
    {
        return Yii::$app->get('orangehrm');
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['emp_number'], 'integer'],
            [['meeting_time'], 'safe'],
            [['meeting_name', 'first_author', 'corresponding_author'], 'string', 'max' => 100],
            [['meeting_language', 'thesis_type', 'is_exchange', 'first_author_type', 'corresponding_author_type'], 'string', 'max' => 4],
            [['host_unit', 'thesis_name', 'first_author_unit', 'corresponding_author_unit', 'award_name'], 'string', 'max' => 255]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'emp_number' => 'Emp Number',
            'meeting_name' => 'Meeting Name',
            'meeting_language' => 'Meeting Language',
            'meeting_time' => 'Meeting Time',
            'host_unit' => 'Host Unit',
            'thesis_type' => 'Thesis Type',
            'thesis_name' => 'Thesis Name',
            'is_exchange' => 'Is Exchange',
            'first_author_type' => 'First Author Type',
            'first_author' => 'First Author',
            'first_author_unit' => 'First Author Unit',
            'corresponding_author_type' => 'Corresponding Author Type',
            'corresponding_author' => 'Corresponding Author',
            'corresponding_author_unit' => 'Corresponding Author Unit',
            'award_name' => 'Award Name',
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
            'meeting_name' => '会议名称',
            'meeting_language' => '会议语言',
            'meeting_time' => '会议时间',
            'host_unit' => '主办单位',
            'thesis_type' => '论文类型    0：全文    2：摘要',
            'thesis_name' => '论文题目',
            'is_exchange' => '大会交流    0：否        1：是',
            'first_author_type' => '第一作者类型  0：本院      1：院外',
            'first_author' => '第一作者',
            'first_author_unit' => '第一作者单位',
            'corresponding_author_type' => '通讯作者类型  0：本院      1：院外',
            'corresponding_author' => '通讯作者',
            'corresponding_author_unit' => '通讯作者单位',
            'award_name' => '奖项名称和等级',
        ]);
    }




}
