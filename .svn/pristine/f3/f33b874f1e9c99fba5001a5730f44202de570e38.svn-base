<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\writings\base;

use Yii;

/**
 * This is the base-model class for table "hs_hr_writings".
 *
 * @property integer $id
 * @property string $writings_name
 * @property string $editor
 * @property string $subeditor
 * @property string $partake_editor
 * @property string $publish_unit
 * @property string $publish_time
 * @property integer $type_id
 * @property integer $all_count
 * @property integer $editor_count
 * @property string $remark
 * @property string $aliasModel
 */
abstract class Writings extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'hs_hr_writings';
    }

    /**
     * @return \yii\db\Connection the database connection used by this AR class.
     */
    public static function getDb()
    {
        return Yii::$app->get('orangehrm');
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['publish_time'], 'safe'],
            [['all_count', 'editor_count'], 'integer'],
            [['writings_name', 'publish_unit', 'remark'], 'string', 'max' => 255],
            [['editor', 'subeditor', 'partake_editor'], 'string', 'max' => 100],
            [['type_id'], 'string', 'max' => 4]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'writings_name' => 'Writings Name',
            'editor' => 'Editor',
            'subeditor' => 'Subeditor',
            'partake_editor' => 'Partake Editor',
            'publish_unit' => 'Publish Unit',
            'publish_time' => 'Publish Time',
            'type_id' => 'Type ID',
            'all_count' => 'All Count',
            'editor_count' => 'Editor Count',
            'remark' => 'Remark',
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
            'writings_name' => '著作名称',
            'editor' => '主编',
            'subeditor' => '副主编',
            'partake_editor' => '参编',
            'publish_unit' => '出版单位',
            'publish_time' => '出版时间',
            'type_id' => '著作类型id',
            'all_count' => '总字数',
            'editor_count' => '编辑字数',
            'remark' => '备注',
        ]);
    }

    public function getWritingstype()
    {
        return $this->hasOne(\common\models\writings\WritingsType::className(), ['id' => 'type_id']);
    }




}
